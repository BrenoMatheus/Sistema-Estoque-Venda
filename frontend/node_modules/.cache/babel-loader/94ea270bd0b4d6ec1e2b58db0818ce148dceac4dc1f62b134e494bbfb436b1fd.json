{"ast":null,"code":"import { onMounted, ref } from 'vue';\nexport default {\n  __name: 'TextInput',\n  props: {\n    modelValue: String\n  },\n  emits: ['update:modelValue'],\n  setup(__props, {\n    expose: __expose\n  }) {\n    const input = ref(null);\n    onMounted(() => {\n      if (input.value.hasAttribute('autofocus')) {\n        input.value.focus();\n      }\n    });\n    __expose({\n      focus: () => input.value.focus()\n    });\n    const __returned__ = {\n      input,\n      onMounted,\n      ref\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["onMounted","ref","input","value","hasAttribute","focus","__expose"],"sources":["/home/brenomatheus/Documentos/Teste Pratico DEV Junior/frontend/src/components/TextInput.vue"],"sourcesContent":["<script setup>\nimport { onMounted, ref } from 'vue';\n\ndefineProps({\n    modelValue: String,\n});\n\ndefineEmits(['update:modelValue']);\n\nconst input = ref(null);\n\nonMounted(() => {\n    if (input.value.hasAttribute('autofocus')) {\n        input.value.focus();\n    }\n});\n\ndefineExpose({ focus: () => input.value.focus() });\n</script>\n\n<template>\n    <input\n        ref=\"input\"\n        class=\"border-gray-300 dark:border-gray-700 dark:bg-gray-900 dark:text-gray-300 focus:border-indigo-500 dark:focus:border-indigo-600 focus:ring-indigo-500 dark:focus:ring-indigo-600 rounded-md shadow-sm\"\n        :value=\"modelValue\"\n        @input=\"$emit('update:modelValue', $event.target.value)\"\n    >\n</template>\n"],"mappings":"AACA,SAASA,SAAS,EAAEC,GAAG,QAAQ,KAAK;;;;;;;;;;IAQpC,MAAMC,KAAK,GAAGD,GAAG,CAAC,IAAI,CAAC;IAEvBD,SAAS,CAAC,MAAM;MACZ,IAAIE,KAAK,CAACC,KAAK,CAACC,YAAY,CAAC,WAAW,CAAC,EAAE;QACvCF,KAAK,CAACC,KAAK,CAACE,KAAK,CAAC,CAAC;MACvB;IACJ,CAAC,CAAC;IAEFC,QAAY,CAAC;MAAED,KAAK,EAAEA,CAAA,KAAMH,KAAK,CAACC,KAAK,CAACE,KAAK,CAAC;IAAE,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}