{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, toDisplayString as _toDisplayString, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h5\", {\n  class: \"text-2xl font-medium text-gray-900 dark:text-white text-center border-b-2 m-2 p-4 border-gray-900\"\n}, \"Pessoas\", -1 /* HOISTED */);\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_FormComponent = _resolveComponent(\"FormComponent\");\n  const _component_ListComponent = _resolveComponent(\"ListComponent\");\n  const _component_DashboardComponent = _resolveComponent(\"DashboardComponent\");\n  return _openBlock(), _createBlock(_component_DashboardComponent, null, {\n    \"slot-pages\": _withCtx(() => [_hoisted_1, _createVNode(_component_FormComponent), _createVNode(_component_ListComponent), _createElementVNode(\"p\", null, _toDisplayString($data.msg), 1 /* TEXT */)]),\n    _: 1 /* STABLE */\n  });\n}","map":{"version":3,"names":["_createElementVNode","class","_createBlock","_component_DashboardComponent","_withCtx","_hoisted_1","_createVNode","_component_FormComponent","_component_ListComponent","_toDisplayString","$data","msg","_"],"sources":["/home/brenomatheus/Documentos/Teste Pratico DEV Junior/frontend/src/pages/Pessoa/PessoaComponent.vue"],"sourcesContent":["<template>\n  <DashboardComponent>\n    <template v-slot:slot-pages>\n      <h5 class=\"text-2xl font-medium text-gray-900 dark:text-white text-center border-b-2 m-2 p-4 border-gray-900\">Pessoas</h5>\n      <FormComponent/>\n      <ListComponent/>\n      <p>{{ msg }}</p>\n    </template>\n  </DashboardComponent>\n</template>\n\n<script>\nimport DashboardComponent from '../Dashboard/DashboardComponent';\nimport FormComponent from './components/FormComponent';\nimport ListComponent from './components/ListComponent';\nimport axios from 'axios';\n\nexport default {\n\n  name:'PessoaComponent',\n  data() {\n    return {\n      msg:'Mensagem',\n      pessoas:[]\n    }\n  },\n\n  computed: {\n        PessoaId() {\n            return this.$route.params.id;\n        },\n    },\n\n  mounted() {\n    this.getPessoas();\n    const PessoaId = this.$route.params.id;\n        fetch(`http://127.0.0.1:8000/api/users/${userId}`)\n            .then(response => response.json())\n            .then(res => this.user = res.data);\n  },\n\n  methods:{\n    async getPessoas(){\n          const url =  todo.is_done ? 'undone' : `done`;\n\n            fetch(`http://127.0.0.1:8000/api/todos/${todo.id}/${url}`,\n                {\n                    method: 'PUT',\n                    headers: {\n                        'Content-Type': 'application/json',\n                        'Accept': 'application/json',\n                    },\n                })\n                .then(response => response.json())\n                .then((res) => {\n                    todo.is_done = res.data.is_done;\n                });\n      \n      const response = await axios.get('http://localhost:8000/api/pessoas');\n      console.log(response);\n    }\n  },\n  components: {\n    DashboardComponent,\n    FormComponent,\n    ListComponent,\n  }\n};\n</script>\n"],"mappings":";gCAGMA,mBAAA,CAA0H;EAAtHC,KAAK,EAAC;AAAmG,GAAC,SAAO;;;;;uBAFzHC,YAAA,CAOqBC,6BAAA;IANF,YAAU,EAAAC,QAAA,CACzB,MAA0H,CAA1HC,UAA0H,EAC1HC,YAAA,CAAgBC,wBAAA,GAChBD,YAAA,CAAgBE,wBAAA,GAChBR,mBAAA,CAAgB,WAAAS,gBAAA,CAAVC,KAAA,CAAAC,GAAG,iB;IANfC,CAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}