{"ast":null,"code":"import axios from 'axios';\nimport { Environment } from '../../../environment';\nconst API_URL = Environment.URL_BASE;\nconst AuthService = {\n  login(email, password) {\n    return axios.post(`${API_URL}/login`, {\n      email,\n      password\n    }).then(response => {\n      if (response.data.token) {\n        localStorage.setItem('userToken', response.data.token);\n      }\n      return response.data;\n    });\n  },\n  getById(user_id) {\n    return axios.get(`${API_URL}/user/`, {\n      user_id\n    }).then(response => {\n      console.log(response.data);\n      return response.data;\n    });\n  },\n  logout() {\n    localStorage.removeItem('userToken');\n  },\n  isAuthenticated() {\n    return localStorage.getItem('userToken') !== null;\n  },\n  async register(email, password, password_confirmation, nome) {\n    let nameToken = nome;\n    return await axios.post(`${API_URL}/register`, {\n      email,\n      password,\n      password_confirmation,\n      nameToken\n    }).then(response => {\n      console.log(response.data.user);\n      return response.data.user;\n    });\n  }\n};\nexport default AuthService;","map":{"version":3,"names":["axios","Environment","API_URL","URL_BASE","AuthService","login","email","password","post","then","response","data","token","localStorage","setItem","getById","user_id","get","console","log","logout","removeItem","isAuthenticated","getItem","register","password_confirmation","nome","nameToken","user"],"sources":["/home/brenomatheus/Documentos/Sistema de Controle de estoque e venda/BrenoMatheus-Sistema-Estoque-Venda/frontend/src/shared/services/api/auth/AuthService.js"],"sourcesContent":["import axios from 'axios';\nimport { Environment } from '../../../environment';\n\nconst API_URL = Environment.URL_BASE;\n\nconst AuthService = {\n  login(email, password) {\n    return axios\n      .post(`${API_URL}/login`, { email, password })\n      .then(response => {\n        if (response.data.token) {\n          localStorage.setItem('userToken', response.data.token);\n        }\n        return response.data;\n      });\n  },\n\n  getById(user_id) {\n    return axios\n      .get(`${API_URL}/user/`, { user_id })\n      .then(response => {\n        console.log(response.data);\n        return response.data;\n      });\n  },\n\n  logout() {\n    localStorage.removeItem('userToken');\n  },\n  \n  isAuthenticated() {\n    return localStorage.getItem('userToken') !== null;\n  },\n\n  async register(email, password, password_confirmation, nome) {\n    let nameToken = nome;\n    return await axios\n    .post(`${API_URL}/register`, {\n      email,\n      password,\n      password_confirmation,\n      nameToken,\n    })\n    .then(response => {\n      \n        console.log(response.data.user);\n        return response.data.user;\n      });\n  },\n};\n\nexport default AuthService;\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,sBAAsB;AAElD,MAAMC,OAAO,GAAGD,WAAW,CAACE,QAAQ;AAEpC,MAAMC,WAAW,GAAG;EAClBC,KAAKA,CAACC,KAAK,EAAEC,QAAQ,EAAE;IACrB,OAAOP,KAAK,CACTQ,IAAI,CAAE,GAAEN,OAAQ,QAAO,EAAE;MAAEI,KAAK;MAAEC;IAAS,CAAC,CAAC,CAC7CE,IAAI,CAACC,QAAQ,IAAI;MAChB,IAAIA,QAAQ,CAACC,IAAI,CAACC,KAAK,EAAE;QACvBC,YAAY,CAACC,OAAO,CAAC,WAAW,EAAEJ,QAAQ,CAACC,IAAI,CAACC,KAAK,CAAC;MACxD;MACA,OAAOF,QAAQ,CAACC,IAAI;IACtB,CAAC,CAAC;EACN,CAAC;EAEDI,OAAOA,CAACC,OAAO,EAAE;IACf,OAAOhB,KAAK,CACTiB,GAAG,CAAE,GAAEf,OAAQ,QAAO,EAAE;MAAEc;IAAQ,CAAC,CAAC,CACpCP,IAAI,CAACC,QAAQ,IAAI;MAChBQ,OAAO,CAACC,GAAG,CAACT,QAAQ,CAACC,IAAI,CAAC;MAC1B,OAAOD,QAAQ,CAACC,IAAI;IACtB,CAAC,CAAC;EACN,CAAC;EAEDS,MAAMA,CAAA,EAAG;IACPP,YAAY,CAACQ,UAAU,CAAC,WAAW,CAAC;EACtC,CAAC;EAEDC,eAAeA,CAAA,EAAG;IAChB,OAAOT,YAAY,CAACU,OAAO,CAAC,WAAW,CAAC,KAAK,IAAI;EACnD,CAAC;EAED,MAAMC,QAAQA,CAAClB,KAAK,EAAEC,QAAQ,EAAEkB,qBAAqB,EAAEC,IAAI,EAAE;IAC3D,IAAIC,SAAS,GAAGD,IAAI;IACpB,OAAO,MAAM1B,KAAK,CACjBQ,IAAI,CAAE,GAAEN,OAAQ,WAAU,EAAE;MAC3BI,KAAK;MACLC,QAAQ;MACRkB,qBAAqB;MACrBE;IACF,CAAC,CAAC,CACDlB,IAAI,CAACC,QAAQ,IAAI;MAEdQ,OAAO,CAACC,GAAG,CAACT,QAAQ,CAACC,IAAI,CAACiB,IAAI,CAAC;MAC/B,OAAOlB,QAAQ,CAACC,IAAI,CAACiB,IAAI;IAC3B,CAAC,CAAC;EACN;AACF,CAAC;AAED,eAAexB,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}