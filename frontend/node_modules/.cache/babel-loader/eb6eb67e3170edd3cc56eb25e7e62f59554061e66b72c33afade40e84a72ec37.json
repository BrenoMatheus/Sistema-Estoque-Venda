{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"pt-6\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h5\", {\n  class: \"text-xl font-bold pb-2\"\n}, \"Total de Vendas\", -1 /* HOISTED */);\nconst _hoisted_3 = {\n  key: 1\n};\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"p\", null, \"Carregando dados...\", -1 /* HOISTED */);\nconst _hoisted_5 = [_hoisted_4];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_Bar = _resolveComponent(\"Bar\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, $data.dataLoaded ? (_openBlock(), _createBlock(_component_Bar, {\n    key: 0,\n    id: \"my-chart-id\",\n    options: $data.chartOptions,\n    data: $data.chartData\n  }, null, 8 /* PROPS */, [\"options\", \"data\"])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [..._hoisted_5]))]);\n}","map":{"version":3,"names":["class","_createElementVNode","key","_hoisted_4","_createElementBlock","_hoisted_1","_hoisted_2","$data","dataLoaded","_createBlock","_component_Bar","id","options","chartOptions","data","chartData","_hoisted_3","_hoisted_5"],"sources":["/home/brenomatheus/Documentos/Teste Pratico DEV Junior/frontend/src/pages/Home/components/Venda/components/ClientesChartComponent.vue"],"sourcesContent":["<template>\n  <div class=\"pt-6\">\n    <h5 class=\"text-xl font-bold pb-2\">Total de Vendas</h5>\n    <Bar v-if=\"dataLoaded\" id=\"my-chart-id\" :options=\"chartOptions\" :data=\"chartData\" />\n    <div v-else>\n      <p>Carregando dados...</p>\n    </div>\n  </div>\n</template>\n\n<script>\nimport VendasService from '@/services/api/vendas/VendasService';\nimport { Bar } from 'vue-chartjs';\nimport {\n  Chart as ChartJS,\n  Title,\n  Tooltip,\n  Legend,\n  BarElement,\n  CategoryScale,\n  LinearScale,\n} from 'chart.js';\n\nChartJS.register(\n  Title,\n  Tooltip,\n  Legend,\n  BarElement,\n  CategoryScale,\n  LinearScale\n);\n\nexport default {\n  props: ['modelValue', 'cliente'],\n  emits: ['update:modelValue'],\n\n  name: 'BarChart',\n  components: { Bar },\n  data() {\n    return {\n      selectedPeople: this.modelValue,\n      loading: false,\n      dataLoaded: false, \n      chartData: {\n        labels: [],\n        datasets: [\n          {\n            label: 'Total quantidade de vendas',\n            backgroundColor: '#87CEFA',\n            data: [],\n          },\n        ],\n      },\n      chartOptions: {\n        responsive: true,\n        indexAxis: 'y',\n      },\n    };\n  },\n  watch: {\n    modelValue(newValue) {\n      this.selectedPeople = newValue;\n    },\n    \n  },\n  methods: {\n    async getAll(cliente) {\n      try {\n        const params = { all: '0', agrupar_cliente: '1' };\n        if(cliente == 0) {\n          const params = { all: '0', agrupar_cliente: '1' };\n        }else{\n          const params = { all: '0', agrupar_cliente: '1' };\n        }\n        this.loading = true;\n        const response = await VendasService.getAll(params);\n\n        this.chartData.datasets[0].data = response.map(item => parseFloat(item.total_preco.replace(',', '.')));\n        this.chartData.labels = response.map(item => item.pessoa.nome);\n        console.log(response.map(item => parseFloat(item.total_preco.replace(',', '.'))));\n        console.log(response.map(item => item.pessoa.nome));\n        this.dataLoaded = true;\n\n\n      } catch (error) {\n        console.error('Erro ao obter pessoas:', error);\n      } finally {\n        this.loading = false;\n      }\n    },\n    shouldApplyFilter() {\n      return this.selectedPeople;\n    },\n\n    buildParams() {\n      const params = {};\n      if (this.selectedPeople) {\n        params.pessoa_id = this.selectedPeople;\n      }\n      return params;\n    },\n  },\n  watch: {\n    selectedPeople() {\n      if (this.shouldApplyFilter()) {\n        this.getAll();\n      }\n    },\n  },\n  mounted() {\n    if (!this.cliente) {\n      this.getAll(0);\n    }\n  },\n};\n</script>\n"],"mappings":";;EACOA,KAAK,EAAC;AAAM;gCACfC,mBAAA,CAAuD;EAAnDD,KAAK,EAAC;AAAwB,GAAC,iBAAe;;EAFtDE,GAAA;AAAA;gCAKMD,mBAAA,CAA0B,WAAvB,qBAAmB;oBAAtBE,UAA0B,C;;;uBAJ9BC,mBAAA,CAMM,OANNC,UAMM,GALJC,UAAuD,EAC5CC,KAAA,CAAAC,UAAU,I,cAArBC,YAAA,CAAoFC,cAAA;IAHxFR,GAAA;IAG2BS,EAAE,EAAC,aAAa;IAAEC,OAAO,EAAEL,KAAA,CAAAM,YAAY;IAAGC,IAAI,EAAEP,KAAA,CAAAQ;iEACvEX,mBAAA,CAEM,OANVY,UAAA,MAAAC,UAAA,I"},"metadata":{},"sourceType":"module","externalDependencies":[]}