{"ast":null,"code":"import \"core-js/modules/web.url-search-params.delete.js\";\nimport \"core-js/modules/web.url-search-params.has.js\";\nimport \"core-js/modules/web.url-search-params.size.js\";\nimport axios from 'axios';\nimport Api from '../axios-config/index';\n\n//const API_URL = process.env.URL_BASE;\nconst API_URL = 'http://localhost:8000/api';\nconst token = localStorage.getItem('userToken');\nconst PessoasService = {\n  async getAll(params) {\n    try {\n      console.log('Parâmetros:', params);\n      const headers = {\n        Authorization: `Bearer ${token}`\n      };\n      const baseUrl = `${API_URL}/pessoa`;\n      const queryParams = new URLSearchParams(params).toString();\n      const urlRelativa = `${baseUrl}?${queryParams}`;\n      const {\n        data\n      } = await Api().get(urlRelativa);\n      return response.data;\n    } catch (error) {\n      console.error('Erro ao obter pessoa:', error);\n      throw new Error('Erro ao obter pessoa da API.');\n      return '';\n    }\n  },\n  async getById(id) {\n    try {\n      const response = await axios.get(`${API_URL}/pessoa/${id}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      return response.data;\n    } catch (error) {\n      console.error('Erro ao obter pessoa:', error);\n      throw new Error('Erro ao obter pessoa da API.');\n    }\n  },\n  async cadastrar(data) {\n    try {\n      const response = await axios.post(`${API_URL}/pessoa`, data, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      if (response.status === 201) {\n        return {\n          success: true,\n          message: 'Pessoa cadastrada com sucesso'\n        };\n      }\n    } catch (error) {\n      console.error('Erro ao cadastrar a pessoa:', error);\n      return {\n        success: false,\n        message: 'Erro ao cadastrar a pessoa'\n      };\n    }\n  },\n  async atualizar(id, newData) {\n    try {\n      const response = await axios.put(`${API_URL}/pessoa/${id}`, newData, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      if (response.status === 201) {\n        return {\n          success: true,\n          message: 'Cadastro de pessoa atualizada com sucesso'\n        };\n      }\n    } catch (error) {\n      console.error('Erro ao atualizar pessoa:', error);\n      throw new Error('Erro ao atualizar pessoa da API.');\n    }\n  },\n  async remover(id) {\n    try {\n      const response = await axios.delete(`${API_URL}/pessoa/${id}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      if (response.status === 201) {\n        return {\n          success: true,\n          message: 'Cadastro de pessoa removido com sucesso'\n        };\n      }\n    } catch (error) {\n      console.error('Erro ao remover pessoa:', error);\n      throw new Error('Erro ao remover pessoa da API.');\n    }\n  }\n};\nexport default PessoasService;\n\n//mail@mail.com","map":{"version":3,"names":["axios","Api","API_URL","token","localStorage","getItem","PessoasService","getAll","params","console","log","headers","Authorization","baseUrl","queryParams","URLSearchParams","toString","urlRelativa","data","get","response","error","Error","getById","id","cadastrar","post","status","success","message","atualizar","newData","put","remover","delete"],"sources":["/home/brenomatheus/Documentos/Teste Pratico DEV Junior/frontend/src/services/api/pessoas/PessoasService.js"],"sourcesContent":["import axios from 'axios';\nimport Api from '../axios-config/index';\n\n//const API_URL = process.env.URL_BASE;\nconst API_URL = 'http://localhost:8000/api';\nconst token = localStorage.getItem('userToken');\n\nconst PessoasService = {\n\n  async getAll(params) {\n    try {\n      console.log('Parâmetros:', params);\n      const headers = {\n        Authorization: `Bearer ${token}`\n      };\n      const baseUrl = `${API_URL}/pessoa`;\n      const queryParams = new URLSearchParams(params).toString();\n      const urlRelativa = `${baseUrl}?${queryParams}`;\n\n      const { data } = await Api().get(urlRelativa);\n\n    \n      return response.data;\n    } catch (error) {\n      console.error('Erro ao obter pessoa:', error);\n      throw new Error('Erro ao obter pessoa da API.');\n      return '';\n    }\n  },\n  async getById(id) {\n    try {\n      const response = await axios.get(`${API_URL}/pessoa/${id}`, {\n        headers: { Authorization: `Bearer ${token}` }\n      });\n      return response.data;\n    } catch (error) {\n      console.error('Erro ao obter pessoa:', error);\n      throw new Error('Erro ao obter pessoa da API.');\n    }\n  },\n\n  async cadastrar(data) {\n    try {\n        const response = await axios.post(`${API_URL}/pessoa`, data,{\n            headers: {\n              Authorization: `Bearer ${token}`\n            }\n          });\n\n      if (response.status === 201) {\n        return { success: true, message: 'Pessoa cadastrada com sucesso' };\n      }\n    } catch (error) {\n      console.error('Erro ao cadastrar a pessoa:', error);\n      return { success: false, message: 'Erro ao cadastrar a pessoa' };\n    }\n  },\n\n  async atualizar(id, newData) {\n    try {\n      const response = await axios.put(`${API_URL}/pessoa/${id}`, newData, {\n        headers: { Authorization: `Bearer ${token}` }\n      });\n      if (response.status === 201) {\n        return { success: true, message: 'Cadastro de pessoa atualizada com sucesso' };\n      }\n    } catch (error) {\n      console.error('Erro ao atualizar pessoa:', error);\n      throw new Error('Erro ao atualizar pessoa da API.');\n    }\n  },\n\n  async remover(id) {\n    try {\n      const response = await axios.delete(`${API_URL}/pessoa/${id}`, {\n        headers: { Authorization: `Bearer ${token}` }\n      });\n      if (response.status === 201) {\n        return { success: true, message: 'Cadastro de pessoa removido com sucesso' };\n      }\n    } catch (error) {\n      console.error('Erro ao remover pessoa:', error);\n      throw new Error('Erro ao remover pessoa da API.');\n    }\n  }\n\n};\n\nexport default PessoasService;\n\n//mail@mail.com"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}