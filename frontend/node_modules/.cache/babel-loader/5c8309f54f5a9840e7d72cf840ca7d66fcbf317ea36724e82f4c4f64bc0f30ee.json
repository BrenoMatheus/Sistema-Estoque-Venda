{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, vModelSelect as _vModelSelect, withDirectives as _withDirectives } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"option\", {\n  value: \"\",\n  selected: \"\"\n}, \"Todos os pessoas\", -1 /* HOISTED */);\nconst _hoisted_2 = [\"value\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _withDirectives((_openBlock(), _createElementBlock(\"select\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.selectedPeople = $event),\n    onChange: _cache[1] || (_cache[1] = (...args) => $options.emitPeople && $options.emitPeople(...args)),\n    class: \"py-2 px-3 w-full rounded mr-4 shadow-lg bg-gray-200 shadow-indigo-500/40 dark:bg-gray-600 dark:shadow-gray-600/40 border-2 border-gray-300\"\n  }, [_hoisted_1, (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.peoples, people => {\n    return _openBlock(), _createElementBlock(\"option\", {\n      key: people.id,\n      value: people.id\n    }, _toDisplayString(people.nome), 9 /* TEXT, PROPS */, _hoisted_2);\n  }), 128 /* KEYED_FRAGMENT */))], 544 /* NEED_HYDRATION, NEED_PATCH */)), [[_vModelSelect, $data.selectedPeople]]);\n}","map":{"version":3,"names":["_createElementVNode","value","selected","_createElementBlock","_cache","$event","$data","selectedPeople","onChange","args","$options","emitPeople","class","_hoisted_1","_Fragment","_renderList","peoples","people","key","id","nome","_hoisted_2"],"sources":["/home/brenomatheus/Documentos/Teste Pratico DEV Junior/frontend/src/pages/Venda/components/SelectPessoaComponent.vue"],"sourcesContent":["\n  <template>\n    <select\n      v-model=\"selectedPeople\"\n      @change=\"emitPeople\"\n      class=\"py-2 px-3 w-full rounded mr-4 shadow-lg bg-gray-200 shadow-indigo-500/40 dark:bg-gray-600 dark:shadow-gray-600/40 border-2 border-gray-300\"\n    >\n      <option value=\"\" selected>Todos os pessoas</option>\n      <option v-for=\"people in peoples\" :key=\"people.id\" :value=\"people.id\">\n        {{ people.nome }}\n      </option>\n    </select>\n  </template>\n  \n  <script>\n  import PessoasService from '@/services/api/pessoas/PessoasService';\n  export default {\n    props: ['modelValue', 'initialPeople'],\n    emits: ['update:modelValue'],\n  \n    data() {\n      return {\n        selectedPeople: this.modelValue,\n        peoples: [],\n        loading: false,\n      };\n    },\n  \n    watch: {\n      modelValue(newValue) {\n        this.selectedPeople = newValue;\n      },\n      selectedPeople(newValue) {\n        this.$emit('update:modelValue', newValue);\n      },\n    },\n    methods: {\n      async getAll() {\n        try {\n          const params = {all:'0', grupo_id:'1'};\n          this.loading = true;\n          const response = await PessoasService.getAll(params);\n          this.peoples = response;\n        } catch (error) {\n          console.error('Erro ao obter pessoas:', error);\n        } finally {\n          this.loading = false;\n        }\n      },\n      emitPeople() {\n        this.$emit('update:modelValue', this.selectedPeople);\n        this.$emit('people-selected', this.selectedPeople);\n      }\n    \n    },\n    mounted() {\n      if (!this.initialPeople) {\n        this.getAll();\n      }\n    },\n  };\n  </script>"],"mappings":";gCAOMA,mBAAA,CAAmD;EAA3CC,KAAK,EAAC,EAAE;EAACC,QAAQ,EAAR;GAAS,kBAAgB;mBAPhD;;wCAEIC,mBAAA,CASS;IAXb,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAGeC,KAAA,CAAAC,cAAc,GAAAF,MAAA;IACtBG,QAAM,EAAAJ,MAAA,QAAAA,MAAA,UAAAK,IAAA,KAAEC,QAAA,CAAAC,UAAA,IAAAD,QAAA,CAAAC,UAAA,IAAAF,IAAA,CAAU;IACnBG,KAAK,EAAC;MAENC,UAAmD,G,kBACnDV,mBAAA,CAESW,SAAA,QAVfC,WAAA,CAQ+BT,KAAA,CAAAU,OAAO,EAAjBC,MAAM;yBAArBd,mBAAA,CAES;MAF0Be,GAAG,EAAED,MAAM,CAACE,EAAE;MAAGlB,KAAK,EAAEgB,MAAM,CAACE;wBAC7DF,MAAM,CAACG,IAAI,wBATtBC,UAAA;4FAGef,KAAA,CAAAC,cAAc,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}