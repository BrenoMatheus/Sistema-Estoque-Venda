{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport PessoasService from '../../services/api/pessoas/PessoasService';\nimport DashboardComponent from '../Dashboard/DashboardComponent';\nimport Pagination from 'vuejs-paginate';\nimport { useRouter } from 'vue-router';\nexport default {\n  name: 'ListComponent',\n  components: {\n    DashboardComponent,\n    Pagination\n  },\n  data() {\n    return {\n      rows: [],\n      searchQuery: '',\n      selectedGroup: '',\n      selectedGender: '',\n      selectedAge: '',\n      people: [],\n      // Dados da tabela\n      currentPage: 1,\n      // Página atual\n      itemsPerPage: 10 // Número de itens por página\n    };\n  },\n  mounted() {\n    this.getAll();\n  },\n  paginatedPeople() {\n    const startIndex = (this.currentPage - 1) * this.itemsPerPage;\n    const endIndex = startIndex + this.itemsPerPage;\n    return this.filteredPeople.slice(startIndex, endIndex);\n  },\n  created() {\n    // Aqui você deve buscar os dados da tabela ao inicializar o componente\n    // Exemplo fictício de dados\n    this.people = [{\n      id: 1,\n      name: 'Alice',\n      age: 25,\n      gender: 'female',\n      group: 'Grupo A'\n    }, {\n      id: 2,\n      name: 'Bob',\n      age: 30,\n      gender: 'male',\n      group: 'Grupo B'\n    }, {\n      id: 3,\n      name: 'Charlie',\n      age: 40,\n      gender: 'male',\n      group: 'Grupo A'\n    }\n    // Mais dados...\n    ];\n  },\n  setup() {\n    const router = useRouter();\n    const editar = id => {\n      router.push(`/pessoa/detalhes/${id}`);\n    };\n    return {\n      editar\n    };\n  },\n  computed: {\n    filteredPeople() {\n      let filtered = this.people;\n      if (this.searchQuery) {\n        filtered = filtered.filter(person => person.name.toLowerCase().includes(this.searchQuery.toLowerCase()));\n      }\n      if (this.selectedGroup) {\n        filtered = filtered.filter(person => person.group === this.selectedGroup);\n      }\n      if (this.selectedGender) {\n        filtered = filtered.filter(person => person.gender === this.selectedGender);\n      }\n      if (this.selectedAge) {\n        filtered = filtered.filter(person => person.age === parseInt(this.selectedAge));\n      }\n      return filtered;\n    },\n    // Calcula o número total de páginas com base no número de itens e itens por página\n    totalPages() {\n      return Math.ceil(this.filteredPeople.length / this.itemsPerPage);\n    }\n  },\n  methods: {\n    fetchPeople() {\n      // Implemente a lógica para buscar os dados da página atual aqui, se necessário\n    },\n    async getAll() {\n      try {\n        this.rows = await PessoasService.getAll();\n      } catch (error) {\n        console.error('Erro ao carregar pessoas:', error);\n      }\n    },\n    async remover(id) {\n      console.log(id);\n      try {\n        await PessoasService.remover(id);\n        console.log('Pessoa removida com sucesso!');\n        window.location.reload();\n      } catch (error) {\n        console.error('Erro ao remover pessoa:', error);\n      }\n    }\n  }\n};","map":{"version":3,"names":["PessoasService","DashboardComponent","Pagination","useRouter","name","components","data","rows","searchQuery","selectedGroup","selectedGender","selectedAge","people","currentPage","itemsPerPage","mounted","getAll","paginatedPeople","startIndex","endIndex","filteredPeople","slice","created","id","age","gender","group","setup","router","editar","push","computed","filtered","filter","person","toLowerCase","includes","parseInt","totalPages","Math","ceil","length","methods","fetchPeople","error","console","remover","log","window","location","reload"],"sources":["/home/brenomatheus/Documentos/Teste Pratico DEV Junior/frontend/src/pages/Pessoa/ListComponent.vue"],"sourcesContent":["<template>\n  <DashboardComponent>\n    <template v-slot:slot-pages>\n      <h5\n        class=\"text-2xl font-medium text-gray-900 dark:text-white text-center border-b-2 m-2 p-4 border-gray-900\"\n      >\n        Pessoas\n      </h5>\n      <div class=\"flex justify-center items-center pt-10\">\n        <div class=\"w-full p-4 sm:p-6 md:p-8 dark:bg-gray-800\">\n\n        <div class=\"w-full\">\n          <div class=\"mb-4 \">\n            <input\n              type=\"text\"\n              v-model=\"searchQuery\"\n              class=\"py-2 px-3 w-1/3 rounded border\"\n              placeholder=\"Pesquisar...\"\n            />\n            <span class=\"border rounded py-3 px-3 bg-slate-300\"><i class=\"fa-solid fa-magnifying-glass\"></i></span>\n          </div>\n          <div class=\"flex items-center justify-between mb-4\">\n            <select v-model=\"selectedGroup\" class=\"py-2 px-3 rounded border mr-4\">\n              <option value=\"\" selected>Todos os grupos</option> \n              <option v-for=\"group in groups\" :key=\"group.id\" :value=\"group.id\">{{ group.name }}</option>\n            </select>\n      \n            <select v-model=\"selectedGender\" class=\"py-2 px-3 rounded border mr-4\">\n              <option value=\"\" selected>Todos os gêneros</option> \n              <option value=\"male\">Homem</option>\n              <option value=\"female\">Mulher</option>\n              <option value=\"other\">Outro</option>\n            </select>\n            <input\n              type=\"number\"\n              v-model=\"selectedIdade\"\n              class=\"py-2 px-3 rounded border mr-4\"\n              placeholder=\"Idade\"\n            />\n          </div>\n          </div>\n      \n        \n          <div class=\"relative overflow-x-auto overflow-y-auto shadow-md sm:rounded-lg\">\n            <table\n              class=\"w-full text-sm text-left rtl:text-right text-gray-500 dark:text-gray-400\"\n            >\n              <thead\n                class=\"text-xs text-gray-700 uppercase bg-gray-50 dark:bg-gray-700 dark:text-gray-400\"\n              >\n                <tr>\n                  <th scope=\"col\" class=\"px-6 py-3\">Nome</th>\n                  <th scope=\"col\" class=\"px-6 py-3\">Gênero</th>\n                  <th scope=\"col\" class=\"px-6 py-3\">Idade</th>\n                  <th scope=\"col\" class=\"px-6 py-3\">Grupo</th>\n                  <th scope=\"col\" class=\"px-6 py-3\">Ação</th>\n                </tr>\n              </thead>\n              <tbody>\n                <tr\n                  v-for=\"row in rows\"\n                  :key=\"row.id\"\n                  class=\"odd:bg-white odd:dark:bg-gray-900 even:bg-gray-50 even:dark:bg-gray-800 border-b dark:border-gray-700\"\n                >\n                  <th\n                    scope=\"row\"\n                    class=\"px-6 py-4 font-medium text-gray-900 whitespace-nowrap dark:text-white\"\n                  >\n                    {{ row.pessoa.nome }}\n                  </th>\n                  <td class=\"px-6 py-4\">{{ row.pessoa.genero }}</td>\n                  <td class=\"px-6 py-4\">{{ row.pessoa.idade }}</td>\n                  <td class=\"px-6 py-4\">{{ row.grupo.nome }}</td>\n                  <td class=\"px-6 py-4\">\n                    <a\n                      @click=\"editar(row.pessoa.id)\"\n                      class=\"text-blue-600 pr-4 hover:text-white dark:text-blue-500 hover:underline hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800\"\n                      ><i class=\"text-xl fa-solid fa-eye\"></i\n                    ></a>\n                    <a\n                      @click=\"remover(row.pessoa.id)\"\n                      class=\"text-blue-600 hover:text-white dark:text-blue-500 hover:underline hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800\"\n                      ><i class=\"text-xl fa-solid fa-trash\"></i\n                    ></a>\n                  </td>\n                </tr>\n              </tbody>\n            </table>\n          </div>\n\n          <!-- Paginação -->\n    <div class=\"mt-4\">\n      <pagination\n        :total=\"totalPages\"\n        v-model=\"currentPage\"\n        @input=\"fetchPeople\"\n      ></pagination>\n      </div>\n\n        </div>\n      </div>\n    </template>\n  </DashboardComponent>\n</template>\n\n<script>\nimport PessoasService from '../../services/api/pessoas/PessoasService';\nimport DashboardComponent from '../Dashboard/DashboardComponent';\nimport Pagination from 'vuejs-paginate'\n\nimport { useRouter } from 'vue-router';\n\nexport default {\n  name: 'ListComponent',\n\n  components: {\n    DashboardComponent,\n    Pagination\n  },\n\n  data() {\n    return {\n      rows: [],\n      searchQuery: '',\n      selectedGroup: '',\n      selectedGender: '',\n      selectedAge: '',\n      people: [], // Dados da tabela\n      currentPage: 1, // Página atual\n      itemsPerPage: 10 // Número de itens por página\n    };\n  },\n\n  mounted() {\n    this.getAll();\n  },\n\n  paginatedPeople() {\n      const startIndex = (this.currentPage - 1) * this.itemsPerPage\n      const endIndex = startIndex + this.itemsPerPage\n      return this.filteredPeople.slice(startIndex, endIndex)\n    },\n    \n    created() {\n    // Aqui você deve buscar os dados da tabela ao inicializar o componente\n    // Exemplo fictício de dados\n    this.people = [\n      { id: 1, name: 'Alice', age: 25, gender: 'female', group: 'Grupo A' },\n      { id: 2, name: 'Bob', age: 30, gender: 'male', group: 'Grupo B' },\n      { id: 3, name: 'Charlie', age: 40, gender: 'male', group: 'Grupo A' },\n      // Mais dados...\n    ]\n  },\n\n  setup() {\n    const router = useRouter();\n\n    const editar = id => {\n      router.push(`/pessoa/detalhes/${id}`);\n    };\n\n    return {\n      editar,\n    };\n  },\n  computed: {\n\n    filteredPeople() {\n      let filtered = this.people\n      if (this.searchQuery) {\n        filtered = filtered.filter(person =>\n          person.name.toLowerCase().includes(this.searchQuery.toLowerCase())\n        )\n      }\n      if (this.selectedGroup) {\n        filtered = filtered.filter(person => person.group === this.selectedGroup)\n      }\n      if (this.selectedGender) {\n        filtered = filtered.filter(person => person.gender === this.selectedGender)\n      }\n      if (this.selectedAge) {\n        filtered = filtered.filter(person => person.age === parseInt(this.selectedAge))\n      }\n      return filtered\n    },\n\n    // Calcula o número total de páginas com base no número de itens e itens por página\n    totalPages() {\n      return Math.ceil(this.filteredPeople.length / this.itemsPerPage)\n    },\n  },\n  \n  methods: {\n    fetchPeople() {\n      // Implemente a lógica para buscar os dados da página atual aqui, se necessário\n    },\n\n    async getAll() {\n      try {\n        this.rows = await PessoasService.getAll();\n      } catch (error) {\n        console.error('Erro ao carregar pessoas:', error);\n      }\n    },\n\n    async remover(id) {\n      console.log(id);\n      try {\n        await PessoasService.remover(id);\n        console.log('Pessoa removida com sucesso!');\n        window.location.reload();\n      } catch (error) {\n        console.error('Erro ao remover pessoa:', error);\n      }\n    },\n  },\n};\n</script>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}