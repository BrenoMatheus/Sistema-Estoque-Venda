{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://localhost:8000/api';\nconst PessoasService = {\n  async getAllPessoa() {\n    try {\n      const token = localStorage.getItem('userToken');\n      const response = await axios.get(`${API_URL}/pessoa`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      console.log(response.data.pessoa);\n      return response.data;\n    } catch (error) {\n      console.error('Erro ao obter produtos:', error);\n      throw new Error('Erro ao obter produtos da API.');\n    }\n  },\n  async cadastrarPessoa(data) {\n    try {\n      console.log(data);\n      const token = localStorage.getItem('userToken');\n      const response = await axios.post(`${API_URL}/pessoa`, {\n        data,\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      if (response.status === 201) {\n        return {\n          success: true,\n          message: 'Pessoa cadastrada com sucesso'\n        };\n      }\n    } catch (error) {\n      console.error('Erro ao cadastrar a pessoa:', error);\n      return {\n        success: false,\n        message: 'Erro ao cadastrar a pessoa'\n      };\n    }\n  }\n};\nexport default PessoasService;\n\n//mail@mail.com","map":{"version":3,"names":["axios","API_URL","PessoasService","getAllPessoa","token","localStorage","getItem","response","get","headers","Authorization","console","log","data","pessoa","error","Error","cadastrarPessoa","post","status","success","message"],"sources":["/home/brenomatheus/Documentos/Teste Pratico DEV Junior/frontend/src/services/api/pessoas/PessoasService.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_URL = 'http://localhost:8000/api';\nconst PessoasService = {\n  async getAllPessoa() {\n    try {\n      const token = localStorage.getItem('userToken');\n\n      const response = await axios.get(`${API_URL}/pessoa`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      console.log(response.data.pessoa);\n      return response.data;\n    } catch (error) {\n      console.error('Erro ao obter produtos:', error);\n      throw new Error('Erro ao obter produtos da API.');\n    }\n  },\n\n  async cadastrarPessoa(data) {\n    try {\n        console.log(data);\n        const token = localStorage.getItem('userToken');\n        const response = await axios.post(`${API_URL}/pessoa`, {\n            data,\n            headers: {\n              Authorization: `Bearer ${token}`\n            }\n          });\n\n      if (response.status === 201) {\n        return { success: true, message: 'Pessoa cadastrada com sucesso' };\n      }\n    } catch (error) {\n      console.error('Erro ao cadastrar a pessoa:', error);\n      return { success: false, message: 'Erro ao cadastrar a pessoa' };\n    }\n  }\n\n};\n\nexport default PessoasService;\n\n//mail@mail.com"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,2BAA2B;AAC3C,MAAMC,cAAc,GAAG;EACrB,MAAMC,YAAYA,CAAA,EAAG;IACnB,IAAI;MACF,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;MAE/C,MAAMC,QAAQ,GAAG,MAAMP,KAAK,CAACQ,GAAG,CAAE,GAAEP,OAAQ,SAAQ,EAAE;QACpDQ,OAAO,EAAE;UACPC,aAAa,EAAG,UAASN,KAAM;QACjC;MACF,CAAC,CAAC;MACFO,OAAO,CAACC,GAAG,CAACL,QAAQ,CAACM,IAAI,CAACC,MAAM,CAAC;MACjC,OAAOP,QAAQ,CAACM,IAAI;IACtB,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdJ,OAAO,CAACI,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MAC/C,MAAM,IAAIC,KAAK,CAAC,gCAAgC,CAAC;IACnD;EACF,CAAC;EAED,MAAMC,eAAeA,CAACJ,IAAI,EAAE;IAC1B,IAAI;MACAF,OAAO,CAACC,GAAG,CAACC,IAAI,CAAC;MACjB,MAAMT,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;MAC/C,MAAMC,QAAQ,GAAG,MAAMP,KAAK,CAACkB,IAAI,CAAE,GAAEjB,OAAQ,SAAQ,EAAE;QACnDY,IAAI;QACJJ,OAAO,EAAE;UACPC,aAAa,EAAG,UAASN,KAAM;QACjC;MACF,CAAC,CAAC;MAEN,IAAIG,QAAQ,CAACY,MAAM,KAAK,GAAG,EAAE;QAC3B,OAAO;UAAEC,OAAO,EAAE,IAAI;UAAEC,OAAO,EAAE;QAAgC,CAAC;MACpE;IACF,CAAC,CAAC,OAAON,KAAK,EAAE;MACdJ,OAAO,CAACI,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MACnD,OAAO;QAAEK,OAAO,EAAE,KAAK;QAAEC,OAAO,EAAE;MAA6B,CAAC;IAClE;EACF;AAEF,CAAC;AAED,eAAenB,cAAc;;AAE7B"},"metadata":{},"sourceType":"module","externalDependencies":[]}