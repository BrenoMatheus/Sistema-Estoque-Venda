{"ast":null,"code":"import ProdutosService from '@/services/api/produtos/ProdutosService';\nexport default {\n  props: ['modelValue', 'initialGroup'],\n  emits: ['update:modelValue'],\n  data() {\n    return {\n      selectedProduct: this.modelValue,\n      produtos: [],\n      loading: false\n    };\n  },\n  watch: {\n    modelValue(newValue) {\n      this.selectedProduct = newValue;\n    },\n    selectedProduct(newValue) {\n      this.$emit('update:modelValue', newValue);\n    }\n  },\n  methods: {\n    async getAll() {\n      try {\n        this.loading = true;\n        const response = await ProdutosService.getAll();\n        this.produtos = response.data;\n      } catch (error) {\n        console.error('Erro ao obter produtos:', error);\n      } finally {\n        this.loading = false;\n      }\n    },\n    emitProduct() {\n      this.$emit('update:modelValue', this.selectedProduct);\n      this.$emit('product-selected', this.selectedProduct);\n    }\n  },\n  mounted() {\n    if (!this.initialGroup) {\n      this.getAll();\n    }\n  }\n};","map":{"version":3,"names":["ProdutosService","props","emits","data","selectedProduct","modelValue","produtos","loading","watch","newValue","$emit","methods","getAll","response","error","console","emitProduct","mounted","initialGroup"],"sources":["/home/brenomatheus/Documentos/Teste Pratico DEV Junior/frontend/src/pages/Venda/components/SelectProdutoComponent.vue"],"sourcesContent":["<template>\n  <select\n    v-model=\"selectedProduct\"\n    @change=\"emitProduct\"\n    class=\"py-2 px-3 rounded mr-4 shadow-lg shadow-indigo-500/40 border-2 border-gray-300\"\n  >\n    <option value=\"\" selected>Todos as produtos</option>\n    <option v-for=\"produto in produtos\" :key=\"produto.id\" :value=\"produto.id\">\n      {{ produto.nome }}\n    </option>\n  </select>\n</template>\n\n<script>\nimport ProdutosService from '@/services/api/produtos/ProdutosService';\n\nexport default {\n  props: ['modelValue', 'initialGroup'],\n  emits: ['update:modelValue'],\n\n  data() {\n    return {\n      selectedProduct: this.modelValue,\n      produtos: [],\n      loading: false,\n    };\n  },\n  watch: {\n    modelValue(newValue) {\n      this.selectedProduct = newValue;\n    },\n    selectedProduct(newValue) {\n      this.$emit('update:modelValue', newValue);\n    },\n  },\n  methods: {\n    async getAll() {\n      try {\n        this.loading = true;\n        const response = await ProdutosService.getAll();\n        this.produtos = response.data;\n      } catch (error) {\n        console.error('Erro ao obter produtos:', error);\n      } finally {\n        this.loading = false;\n      }\n    },\n    emitProduct() {\n      this.$emit('update:modelValue', this.selectedProduct);\n      this.$emit('product-selected', this.selectedProduct);\n    }\n  },\n  mounted() {\n    if (!this.initialGroup) {\n      this.getAll();\n    }\n  },\n};\n</script>\n"],"mappings":"AAcA,OAAOA,eAAc,MAAO,yCAAyC;AAErE,eAAe;EACbC,KAAK,EAAE,CAAC,YAAY,EAAE,cAAc,CAAC;EACrCC,KAAK,EAAE,CAAC,mBAAmB,CAAC;EAE5BC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,eAAe,EAAE,IAAI,CAACC,UAAU;MAChCC,QAAQ,EAAE,EAAE;MACZC,OAAO,EAAE;IACX,CAAC;EACH,CAAC;EACDC,KAAK,EAAE;IACLH,UAAUA,CAACI,QAAQ,EAAE;MACnB,IAAI,CAACL,eAAc,GAAIK,QAAQ;IACjC,CAAC;IACDL,eAAeA,CAACK,QAAQ,EAAE;MACxB,IAAI,CAACC,KAAK,CAAC,mBAAmB,EAAED,QAAQ,CAAC;IAC3C;EACF,CAAC;EACDE,OAAO,EAAE;IACP,MAAMC,MAAMA,CAAA,EAAG;MACb,IAAI;QACF,IAAI,CAACL,OAAM,GAAI,IAAI;QACnB,MAAMM,QAAO,GAAI,MAAMb,eAAe,CAACY,MAAM,CAAC,CAAC;QAC/C,IAAI,CAACN,QAAO,GAAIO,QAAQ,CAACV,IAAI;MAC/B,EAAE,OAAOW,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MACjD,UAAU;QACR,IAAI,CAACP,OAAM,GAAI,KAAK;MACtB;IACF,CAAC;IACDS,WAAWA,CAAA,EAAG;MACZ,IAAI,CAACN,KAAK,CAAC,mBAAmB,EAAE,IAAI,CAACN,eAAe,CAAC;MACrD,IAAI,CAACM,KAAK,CAAC,kBAAkB,EAAE,IAAI,CAACN,eAAe,CAAC;IACtD;EACF,CAAC;EACDa,OAAOA,CAAA,EAAG;IACR,IAAI,CAAC,IAAI,CAACC,YAAY,EAAE;MACtB,IAAI,CAACN,MAAM,CAAC,CAAC;IACf;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}