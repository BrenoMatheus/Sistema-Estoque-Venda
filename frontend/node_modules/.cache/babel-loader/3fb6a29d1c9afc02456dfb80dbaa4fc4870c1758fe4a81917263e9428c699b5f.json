{"ast":null,"code":"import PessoasService from '@/services/api/pessoas/PessoasService';\nexport default {\n  props: ['modelValue', 'initialPeople'],\n  emits: ['update:modelValue'],\n  data() {\n    return {\n      selectedPeople: this.modelValue,\n      peoples: [],\n      loading: false\n    };\n  },\n  watch: {\n    modelValue(newValue) {\n      this.selectedPeople = newValue;\n    },\n    selectedPeople(newValue) {\n      this.$emit('update:modelValue', newValue);\n    }\n  },\n  methods: {\n    async getAll() {\n      try {\n        this.loading = true;\n        const response = await PessoasService.getAll();\n        console.log();\n        this.peoples = response.data;\n      } catch (error) {\n        console.error('Erro ao obter pessoas:', error);\n      } finally {\n        this.loading = false;\n      }\n    },\n    emitPeople() {\n      this.$emit('update:modelValue', this.selectedPeople);\n      this.$emit('people-selected', this.selectedPeople);\n    }\n  },\n  mounted() {\n    if (!this.initialPeople) {\n      this.getAll();\n    }\n  }\n};","map":{"version":3,"names":["PessoasService","props","emits","data","selectedPeople","modelValue","peoples","loading","watch","newValue","$emit","methods","getAll","response","console","log","error","emitPeople","mounted","initialPeople"],"sources":["/home/brenomatheus/Documentos/Teste Pratico DEV Junior/frontend/src/pages/Venda/components/SelectPessoaComponent.vue"],"sourcesContent":["\n  <template>\n    <select\n      v-model=\"selectedPeople\"\n      @change=\"emitPeople\"\n      class=\"py-2 px-3 rounded mr-4 shadow-lg shadow-indigo-500/40 border-2 border-gray-300\"\n    >\n      <option value=\"\" selected>Todos os pessoas</option>\n      <option v-for=\"people in peoples\" :key=\"people.id\" :value=\"people.id\">\n        {{ people.nome }}\n      </option>\n    </select>\n  </template>\n  \n  <script>\n  import PessoasService from '@/services/api/pessoas/PessoasService';\n  export default {\n    props: ['modelValue', 'initialPeople'],\n    emits: ['update:modelValue'],\n  \n    data() {\n      return {\n        selectedPeople: this.modelValue,\n        peoples: [],\n        loading: false,\n      };\n    },\n  \n    watch: {\n      modelValue(newValue) {\n        this.selectedPeople = newValue;\n      },\n      selectedPeople(newValue) {\n        this.$emit('update:modelValue', newValue);\n      },\n    },\n    methods: {\n      async getAll() {\n        try {\n          this.loading = true;\n          const response = await PessoasService.getAll();\n          console.log()\n          this.peoples = response.data;\n        } catch (error) {\n          console.error('Erro ao obter pessoas:', error);\n        } finally {\n          this.loading = false;\n        }\n      },\n      emitPeople() {\n        this.$emit('update:modelValue', this.selectedPeople);\n        this.$emit('people-selected', this.selectedPeople);\n      }\n    \n    },\n    mounted() {\n      if (!this.initialPeople) {\n        this.getAll();\n      }\n    },\n  };\n  </script>"],"mappings":"AAeE,OAAOA,cAAa,MAAO,uCAAuC;AAClE,eAAe;EACbC,KAAK,EAAE,CAAC,YAAY,EAAE,eAAe,CAAC;EACtCC,KAAK,EAAE,CAAC,mBAAmB,CAAC;EAE5BC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,cAAc,EAAE,IAAI,CAACC,UAAU;MAC/BC,OAAO,EAAE,EAAE;MACXC,OAAO,EAAE;IACX,CAAC;EACH,CAAC;EAEDC,KAAK,EAAE;IACLH,UAAUA,CAACI,QAAQ,EAAE;MACnB,IAAI,CAACL,cAAa,GAAIK,QAAQ;IAChC,CAAC;IACDL,cAAcA,CAACK,QAAQ,EAAE;MACvB,IAAI,CAACC,KAAK,CAAC,mBAAmB,EAAED,QAAQ,CAAC;IAC3C;EACF,CAAC;EACDE,OAAO,EAAE;IACP,MAAMC,MAAMA,CAAA,EAAG;MACb,IAAI;QACF,IAAI,CAACL,OAAM,GAAI,IAAI;QACnB,MAAMM,QAAO,GAAI,MAAMb,cAAc,CAACY,MAAM,CAAC,CAAC;QAC9CE,OAAO,CAACC,GAAG,CAAC;QACZ,IAAI,CAACT,OAAM,GAAIO,QAAQ,CAACV,IAAI;MAC9B,EAAE,OAAOa,KAAK,EAAE;QACdF,OAAO,CAACE,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAChD,UAAU;QACR,IAAI,CAACT,OAAM,GAAI,KAAK;MACtB;IACF,CAAC;IACDU,UAAUA,CAAA,EAAG;MACX,IAAI,CAACP,KAAK,CAAC,mBAAmB,EAAE,IAAI,CAACN,cAAc,CAAC;MACpD,IAAI,CAACM,KAAK,CAAC,iBAAiB,EAAE,IAAI,CAACN,cAAc,CAAC;IACpD;EAEF,CAAC;EACDc,OAAOA,CAAA,EAAG;IACR,IAAI,CAAC,IAAI,CAACC,aAAa,EAAE;MACvB,IAAI,CAACP,MAAM,CAAC,CAAC;IACf;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}