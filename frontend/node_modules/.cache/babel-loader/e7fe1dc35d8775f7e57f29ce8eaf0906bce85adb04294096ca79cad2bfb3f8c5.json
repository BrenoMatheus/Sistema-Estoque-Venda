{"ast":null,"code":"import { openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = [\"value\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"input\", {\n    ref: \"input\",\n    class: \"border-gray-300 dark:border-gray-700 dark:bg-gray-900 dark:text-gray-300 focus:border-indigo-500 dark:focus:border-indigo-600 focus:ring-indigo-500 dark:focus:ring-indigo-600 rounded-md shadow-sm\",\n    value: $props.modelValue,\n    onInput: _cache[0] || (_cache[0] = $event => _ctx.$emit('update:modelValue', $event.target.value))\n  }, null, 40 /* PROPS, NEED_HYDRATION */, _hoisted_1);\n}","map":{"version":3,"names":["_createElementBlock","ref","class","value","$props","modelValue","onInput","_cache","$event","_ctx","$emit","target","_hoisted_1"],"sources":["/home/brenomatheus/Documentos/Teste Pratico DEV Junior/frontend/src/components/TextInput.vue"],"sourcesContent":["<script setup>\nimport { onMounted, ref } from 'vue';\n\ndefineProps({\n    modelValue: String,\n});\n\ndefineEmits(['update:modelValue']);\n\nconst input = ref(null);\n\nonMounted(() => {\n    if (input.value.hasAttribute('autofocus')) {\n        input.value.focus();\n    }\n});\n\ndefineExpose({ focus: () => input.value.focus() });\n</script>\n\n<template>\n    <input\n        ref=\"input\"\n        class=\"border-gray-300 dark:border-gray-700 dark:bg-gray-900 dark:text-gray-300 focus:border-indigo-500 dark:focus:border-indigo-600 focus:ring-indigo-500 dark:focus:ring-indigo-600 rounded-md shadow-sm\"\n        :value=\"modelValue\"\n        @input=\"$emit('update:modelValue', $event.target.value)\"\n    >\n</template>\n"],"mappings":";mBAAA;;uBAqBIA,mBAAA,CAKC;IAJGC,GAAG,EAAC,OAAO;IACXC,KAAK,EAAC,qMAAqM;IAC1MC,KAAK,EAAEC,MAAA,CAAAC,UAAU;IACjBC,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEC,IAAA,CAAAC,KAAK,sBAAsBF,MAAM,CAACG,MAAM,CAACR,KAAK;2CAzB9DS,UAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}