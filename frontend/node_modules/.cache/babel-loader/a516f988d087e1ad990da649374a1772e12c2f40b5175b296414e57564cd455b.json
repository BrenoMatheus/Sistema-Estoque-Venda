{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport PessoasService from '../../services/api/pessoas/PessoasService';\nimport DashboardComponent from '../Dashboard/DashboardComponent';\nimport { ref, reactive, watch } from 'vue';\nimport { useRoute, useRouter } from 'vue-router';\nexport default {\n  name: 'FormComponent',\n  components: {\n    DashboardComponent\n  },\n  setup() {\n    const route = useRoute();\n    const router = useRouter();\n    const formRef = ref(null);\n    const isLoading = ref(false);\n    const id = route.params.id || 'nova';\n    const formData = reactive({\n      nome: '',\n      idade: '',\n      email: '',\n      senha: '',\n      grupo_pessoa_id: '',\n      genero: ''\n    });\n    console.log(id);\n    const fetchPessoa = () => {\n      if (id !== 'nova') {\n        console.log('update');\n        PessoasService.getById(id).then(result => {\n          if (result instanceof Error) {\n            alert(result.message);\n            router.push('/pessoa');\n          } else {\n            formData.nome = result.nome;\n            formData.idade = result.idade;\n            formData.email = result.email;\n            formData.senha = result.senha;\n            formData.grupo_pessoa_id = result.grupo_pessoa_id;\n            formData.genero = result.genero;\n            formRef.value.setData(formData);\n          }\n        });\n      } else {\n        formRef.value.setData(formData);\n      }\n    };\n    const handleSave = formData => {\n      if (id === 'nova') {\n        PessoasService.create(formData).then(result => {\n          isLoading.value = false;\n          if (result instanceof Error) {\n            alert(result.message);\n          } else {\n            if (isSaveAndClose()) {\n              router.push('/pessoa');\n            } else {\n              router.push(`/pessoa/detail/${result}`);\n            }\n          }\n        });\n      } else {\n        PessoasService.updateById(Number(id), {\n          id: Number(id),\n          ...formData\n        }).then(result => {\n          isLoading.value = false;\n          if (result instanceof Error) {\n            alert(result.message);\n          } else {\n            if (isSaveAndClose()) {\n              router.push('/equipments');\n            }\n          }\n        });\n      }\n    };\n    watch(() => route.params.id, () => {\n      fetchPessoa();\n    });\n    return {\n      formRef,\n      isLoading,\n      formData,\n      handleSave\n    };\n  },\n  data() {\n    return {\n      feedbackMessage: '',\n      isFeedbackSuccess: false,\n      triedToSubmit: false,\n      dialog: false\n    };\n  },\n  computed: {\n    formFilled() {\n      return this.fieldFilled(this.formData.nome) && this.fieldFilled(this.formData.idade) && this.fieldFilled(this.formData.email) && this.fieldFilled(this.formData.senha) && this.fieldFilled(this.formData.grupo_pessoa_id) && this.fieldFilled(this.formData.genero);\n    }\n  },\n  methods: {\n    fieldFilled(field) {\n      if (typeof field === 'string') {\n        return field.trim() !== '';\n      } else if (typeof field === 'number') {\n        return !isNaN(field);\n      } else {\n        return !!field;\n      }\n    },\n    async cadastrar() {\n      this.triedToSubmit = true;\n      if (!this.formFilled) {\n        this.feedbackMessage = 'Por favor, preencha todos os campos obrigatÃ³rios.';\n        this.isFeedbackSuccess = false;\n        return;\n      }\n      const {\n        success,\n        message\n      } = await PessoasService.cadastrarPessoa(this.formData);\n      if (success) {\n        console.log(message);\n        this.feedbackMessage = 'Pessoa cadastrada com sucesso!';\n        this.isFeedbackSuccess = true;\n        this.clearFormData();\n        setTimeout(() => this.feedbackMessage = '', 5000);\n      } else {\n        console.error(message);\n        this.feedbackMessage = message;\n        this.isFeedbackSuccess = false;\n      }\n    },\n    async getById() {\n      try {\n        const pessoa = await PessoasService.getById(this.$route.params.id);\n        this.formData.nome = pessoa.nome;\n        this.formData.idade = pessoa.idade;\n        this.formData.email = pessoa.email;\n        this.formData.senha = pessoa.senha;\n        this.formData.grupo_pessoa_id = pessoa.grupo_pessoa_id;\n        this.formData.genero = pessoa.genero;\n      } catch (error) {\n        console.error('Erro ao obter pessoa por ID:', error);\n        alert('Erro ao obter pessoa por ID.');\n      }\n    },\n    async atualizar() {\n      try {\n        await PessoasService.atualizar(this.$route.params.id, this.formData);\n        alert('Pessoa atualizada com sucesso!');\n      } catch (error) {\n        console.error('Erro ao atualizar pessoa:', error);\n        alert('Erro ao atualizar pessoa.');\n      }\n    },\n    clearFormData() {\n      this.formData.nome = '';\n      this.formData.idade = '';\n      this.formData.email = '';\n      this.formData.senha = '';\n      this.formData.grupo_pessoa_id = '';\n      this.formData.genero = '';\n    }\n  },\n  mounted() {\n    if (this.$route.params.id) {\n      this.getById();\n    }\n  }\n};","map":{"version":3,"names":["PessoasService","DashboardComponent","ref","reactive","watch","useRoute","useRouter","name","components","setup","route","router","formRef","isLoading","id","params","formData","nome","idade","email","senha","grupo_pessoa_id","genero","console","log","fetchPessoa","getById","then","result","Error","alert","message","push","value","setData","handleSave","create","isSaveAndClose","updateById","Number","data","feedbackMessage","isFeedbackSuccess","triedToSubmit","dialog","computed","formFilled","fieldFilled","methods","field","trim","isNaN","cadastrar","success","cadastrarPessoa","clearFormData","setTimeout","error","pessoa","$route","atualizar","mounted"],"sources":["/home/brenomatheus/Documentos/Teste Pratico DEV Junior/frontend/src/pages/Pessoa/DetailComponent.vue"],"sourcesContent":["<template>\n  <DashboardComponent>\n    <template v-slot:slot-pages>\n      <h5\n        class=\"text-2xl font-medium text-gray-900 dark:text-white text-center border-b-2 m-2 p-4 border-gray-900\"\n      >\n        Pessoas\n      </h5>\n \n\n      <div class=\"flex justify-center items-center pt-10\">\n        <div class=\"w-4/6 p-4  sm:p-6 md:p-8 dark:bg-gray-800\">\n          <h5 class=\"text-xl font-medium text-gray-900 dark:text-white text-center border-b-2 mb-4 pb-4 border-gray-900\">Cadastro de Pessoa</h5>\n          \n          \n          <form ref={formRef} onSubmit={handleSave} class=\"p-2\">\n\n            <div class=\"flex flex-wrap -mx-3 mb-6\">\n              <div class=\"w-full md:w-1/2 px-3 mb-6 md:mb-0\">\n                <label class=\"block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2\" for=\"nome\">\n                  Nome\n                </label>\n                <input v-model=\"formData.nome\" :class=\"{ 'invalid-input': triedToSubmit &&  !nomeFilled }\" class=\"appearance-none block w-full bg-gray-200 text-gray-700 border border-gray-200 rounded py-3 px-4 mb-3 leading-tight focus:outline-none focus:bg-white focus:border-gray-500\" id=\"nome\" type=\"text\" placeholder=\"Seu nome Completo\" >\n              </div>\n              <div class=\"w-full md:w-1/2 px-3 mb-6 md:mb-0\">\n                <label class=\"block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2\" for=\"nome\">\n                  Idade\n                </label>\n                <input v-model=\"formData.idade\" :class=\"{ 'invalid-input':triedToSubmit &&  !idadeFilled }\" class=\"appearance-none block w-full bg-gray-200 text-gray-700 border border-gray-200 rounded py-3 px-4 mb-3 leading-tight focus:outline-none focus:bg-white focus:border-gray-500\" id=\"idade\" type=\"number\" placeholder=\"Sua idade\" >\n              </div>\n            </div>\n            <div class=\"flex flex-wrap -mx-3 mb-6\">\n              <div class=\"w-full md:w-1/2 px-3 mb-6 md:mb-0\">\n                <label class=\"block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2\" for=\"email\">\n                  email\n                </label>\n                <input v-model=\"formData.email\" :class=\"{ 'invalid-input': triedToSubmit &&  !emailFilled }\" class=\"appearance-none block w-full bg-gray-200 text-gray-700 border border-gray-200 rounded py-3 px-4 mb-3 leading-tight focus:outline-none focus:bg-white focus:border-gray-500\" type=\"email\" name=\"email\" id=\"email\" placeholder=\"Email\" >\n              </div>\n              \n              <div class=\"w-full md:w-1/2 px-3\">\n                <label class=\"block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2\" for=\"senha\">\n                  Senha\n                </label>\n                <input v-model=\"formData.senha\" :class=\"{ 'invalid-input': triedToSubmit &&  !senhaFilled }\" class=\"appearance-none block w-full bg-gray-200 text-gray-700 border border-gray-200 rounded py-3 px-4 mb-3 leading-tight focus:outline-none focus:bg-white focus:border-gray-500\" id=\"senha\" type=\"password\" placeholder=\"******************\" >\n              </div>\n            </div>\n\n            <div class=\"flex flex-wrap -mx-3 mb-2\">\n\n              <div class=\"w-full md:w-1/2 px-3 mb-6 md:mb-0\">\n                <label class=\"block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2\" for=\"grid-state\">\n                  Genero\n                </label>\n                <div class=\"relative\">\n                  <select v-model=\"formData.genero\" :class=\"{ 'invalid-input': triedToSubmit &&  !generoFilled }\" class=\"block appearance-none w-full bg-gray-200 border border-gray-200 text-gray-700 py-3 px-4 pr-8 rounded leading-tight focus:outline-none focus:bg-white focus:border-gray-500\" id=\"grid-state\" >\n                    <option></option>\n                    <option>Masculino</option>\n                    <option>Feminino</option>\n                    <option>Outro...</option>\n                  </select>\n                  <div class=\"pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-700\">\n                    <svg class=\"fill-current h-4 w-4\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\"><path d=\"M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z\"/></svg>\n                  </div>\n                </div>\n              </div>\n\n              <div class=\"w-full md:w-1/2 px-3 mb-6 md:mb-0\">\n                <label class=\"block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2\" for=\"grid-state\">\n                  Grupo\n                </label>\n                <div class=\"relative\">\n                  <select v-model=\"formData.grupo_pessoa_id\" :class=\"{ 'invalid-input': triedToSubmit &&  !grupoPessoaIdFilled }\" class=\"block appearance-none w-full bg-gray-200 border border-gray-200 text-gray-700 py-3 px-4 pr-8 rounded leading-tight focus:outline-none focus:bg-white focus:border-gray-500\" id=\"grid-state\" >\n                    <option></option>\n                    <option value=\"1\">Fornecedor</option>\n                    <option value=\"2\">Cliente</option>\n                    <option value=\"3\">Funcionario</option>\n                  </select>\n                  <div class=\"pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-700\">\n                    <svg class=\"fill-current h-4 w-4\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\"><path d=\"M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z\"/></svg>\n                  </div>\n                </div>\n              </div>\n              \n            </div>\n\n            <div class=\"pt-4\">\n              <button type=\"submit\" v-if=\"id == 'nova'\" class=\"w-full text-white bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800\" @click=\"handleSave('nova')\">Cadastrar</button>\n            </div>\n            <div class=\"pt-4\">\n              <button type=\"submit\"  v-if=\"id\" class=\"w-full text-white bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800\" @click=\"handleSave(id)\">atualizar</button>\n            </div>\n            <div class=\"mt-4\">\n              <span class=\"text-center text-sm\" :class=\"{'text-green-500': sucesso, 'text-red-500': !sucesso && feedbackMessage}\">\n                {{ feedbackMessage }}\n              </span>\n            </div>\n\n          </form>\n        </div>\n    </div>\n    </template>\n  </DashboardComponent>\n</template>\n\n<script>\nimport PessoasService from '../../services/api/pessoas/PessoasService';\nimport DashboardComponent from '../Dashboard/DashboardComponent';\nimport { ref, reactive, watch } from 'vue';\nimport { useRoute, useRouter } from 'vue-router';\n\nexport default {\n  name: 'FormComponent',\n\n  components: {\n    DashboardComponent,\n  },\n\n  setup() {\n    const route = useRoute();\n    const router = useRouter();\n    const formRef = ref(null);\n    const isLoading = ref(false);\n    \n    const id = route.params.id || 'nova';\n\n    const formData = reactive({\n      nome: '',\n      idade: '',\n      email: '',\n      senha: '',\n      grupo_pessoa_id: '',\n      genero: '',\n    });\n    console.log(id);\n    const fetchPessoa = () => {\n      if (id !== 'nova') {\n        console.log('update');\n        PessoasService.getById(id)\n          .then((result) => {\n            if (result instanceof Error) {\n              alert(result.message);\n              router.push('/pessoa');\n            } else {\n              formData.nome = result.nome;\n              formData.idade = result.idade;\n              formData.email = result.email;\n              formData.senha = result.senha;\n              formData.grupo_pessoa_id = result.grupo_pessoa_id;\n              formData.genero = result.genero;\n              formRef.value.setData(formData);\n            }\n          });\n      } else {\n        formRef.value.setData(formData);\n      }\n    };\n\n    const handleSave = (formData) => {\n      if (id === 'nova') {\n        PessoasService.create(formData)\n          .then((result) => {\n            isLoading.value = false;\n            if (result instanceof Error) {\n              alert(result.message);\n            } else {\n              if (isSaveAndClose()) {\n                router.push('/pessoa');\n              } else {\n                router.push(`/pessoa/detail/${result}`);\n              }\n            }\n          });\n      } else {\n        PessoasService.updateById(Number(id), { id: Number(id), ...formData })\n          .then((result) => {\n            isLoading.value = false;\n            if (result instanceof Error) {\n              alert(result.message);\n            } else {\n              if (isSaveAndClose()) {\n                router.push('/equipments');\n              }\n            }\n          });\n      }\n    };\n\n    watch(() => route.params.id, () => {\n      fetchPessoa();\n    });\n\n    return {\n      formRef,\n      isLoading,\n      formData,\n      handleSave,\n    };\n  },\n\n  data() {\n    return {\n      feedbackMessage: '', \n      isFeedbackSuccess: false, \n      triedToSubmit: false,\n      dialog: false,\n    };\n  },\n\n  computed: {\n    formFilled() {\n      return (\n        this.fieldFilled(this.formData.nome) &&\n        this.fieldFilled(this.formData.idade) &&\n        this.fieldFilled(this.formData.email) &&\n        this.fieldFilled(this.formData.senha) &&\n        this.fieldFilled(this.formData.grupo_pessoa_id) &&\n        this.fieldFilled(this.formData.genero)\n      );\n    },\n  },\n\n  methods: {\n    fieldFilled(field) {\n      if (typeof field === 'string') {\n        return field.trim() !== '';\n      } else if (typeof field === 'number') {\n        return !isNaN(field); \n      } else {\n        return !!field;\n      }\n    },\n\n    async cadastrar() {\n      this.triedToSubmit = true;\n\n      if (!this.formFilled) {\n        this.feedbackMessage = 'Por favor, preencha todos os campos obrigatÃ³rios.';\n        this.isFeedbackSuccess = false;\n        return;\n      }\n      \n      const { success, message } = await PessoasService.cadastrarPessoa(this.formData);\n      \n      if (success) {\n        console.log(message);\n        this.feedbackMessage = 'Pessoa cadastrada com sucesso!';\n        this.isFeedbackSuccess = true;\n        this.clearFormData();\n        setTimeout(() => this.feedbackMessage = '', 5000);\n      } else {\n        console.error(message);\n        this.feedbackMessage = message;\n        this.isFeedbackSuccess = false;\n      }\n    },\n\n    async getById() {\n      try {\n        const pessoa = await PessoasService.getById(this.$route.params.id);\n        this.formData.nome = pessoa.nome;\n        this.formData.idade = pessoa.idade;\n        this.formData.email = pessoa.email;\n        this.formData.senha = pessoa.senha;\n        this.formData.grupo_pessoa_id = pessoa.grupo_pessoa_id;\n        this.formData.genero = pessoa.genero;\n      } catch (error) {\n        console.error('Erro ao obter pessoa por ID:', error);\n        alert('Erro ao obter pessoa por ID.');\n      }\n    },\n    \n    async atualizar() {\n      try {\n        await PessoasService.atualizar(this.$route.params.id, this.formData);\n        alert('Pessoa atualizada com sucesso!');\n      } catch (error) {\n        console.error('Erro ao atualizar pessoa:', error);\n        alert('Erro ao atualizar pessoa.');\n      }\n    },\n\n    clearFormData() {\n      this.formData.nome = '';\n      this.formData.idade = '';\n      this.formData.email = '';\n      this.formData.senha = '';\n      this.formData.grupo_pessoa_id = '';\n      this.formData.genero = '';\n    }\n  },\n\n  mounted() {\n    if (this.$route.params.id) {\n      this.getById();\n    }\n  },\n};\n</script>\n\n<style scoped>\n.invalid-input {\n  border-color: red;\n}\n</style>\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}