{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport VendasService from '@/services/api/vendas/VendasService';\nimport { Bar } from 'vue-chartjs';\nimport { Chart as ChartJS, Title, Tooltip, Legend, BarElement, CategoryScale, LinearScale } from 'chart.js';\nimport marcaService from '@/services/api/marca/marcaService';\nimport ServiceGrupoProduto from '@/services/api/grupoProduto/grupoProdutoService';\nChartJS.register(Title, Tooltip, Legend, BarElement, CategoryScale, LinearScale);\nexport default {\n  props: ['filter'],\n  name: 'BarChart',\n  components: {\n    Bar\n  },\n  data() {\n    return {\n      marcas: [],\n      grupos: [],\n      componentKey: 0,\n      loading: false,\n      dataLoaded: false,\n      ChartMarca: {\n        labels: [],\n        datasets: [{\n          label: 'Total de vendas por marca',\n          backgroundColor: '#228B22',\n          data: []\n        }]\n      },\n      ChartGrupo: {\n        labels: [],\n        datasets: [{\n          label: 'Total de vendas por grupo',\n          backgroundColor: '#DAA520',\n          data: []\n        }]\n      },\n      chartOptions: {\n        responsive: true\n      }\n    };\n  },\n  watch: {\n    filter: {\n      immediate: true,\n      handler(newValue) {\n        this.getAll();\n      }\n    }\n  },\n  methods: {\n    async getAll() {\n      try {\n        let params = {\n          all: '0',\n          agrupar_produto: '1'\n        };\n        this.loading = true;\n        const vendas = await VendasService.getAll(params);\n        const vendasPorMarca = {};\n        const vendasPorGrupo = {};\n        for (const venda of vendas) {\n          const marcaNome = venda.produto.marca.nome;\n          const marcaVenda = parseFloat(venda.total_preco);\n          const grupoNome = venda.produto.grupo_produto.nome;\n          const grupoVenda = parseFloat(venda.total_preco);\n          if (vendasPorMarca[marcaNome]) {\n            vendasPorMarca[marcaNome] += marcaVenda;\n          } else {\n            vendasPorMarca[marcaNome] = marcaVenda;\n          }\n          if (vendasPorGrupo[grupoNome]) {\n            vendasPorGrupo[grupoNome] += grupoVenda;\n          } else {\n            vendasPorGrupo[grupoNome] = grupoVenda;\n          }\n        }\n        console.log(vendasPorGrupo);\n        Object.keys(vendasPorMarca).forEach(marca => {\n          this.ChartMarca.labels.push(marca);\n          this.ChartMarca.datasets[0].data.push(vendasPorMarca[marca]);\n        });\n        Object.keys(vendasPorGrupo).forEach(marca => {\n          this.ChartGrupo.labels.push(marca);\n          this.ChartGrupo.datasets[0].data.push(vendasPorGrupo[marca]);\n        });\n        this.dataLoaded = true;\n      } catch (error) {\n        this.emitVenda({\n          total_preco: 0,\n          total_quantidade: 'Não há registros'\n        });\n        this.ChartGrupo.labels = [];\n        this.ChartGrupo.datasets[0].data = [''];\n        this.ChartMarca.labels = [];\n        this.ChartMarca.datasets[0].data = [];\n        this.componentKey++;\n        console.error('Erro ao obter vendas:', error);\n      } finally {\n        this.loading = false;\n      }\n    },\n    emitVenda(currentMonth) {\n      this.$emit('currentMonth', currentMonth);\n    }\n  }\n};","map":{"version":3,"names":["VendasService","Bar","Chart","ChartJS","Title","Tooltip","Legend","BarElement","CategoryScale","LinearScale","marcaService","ServiceGrupoProduto","register","props","name","components","data","marcas","grupos","componentKey","loading","dataLoaded","ChartMarca","labels","datasets","label","backgroundColor","ChartGrupo","chartOptions","responsive","watch","filter","immediate","handler","newValue","getAll","methods","params","all","agrupar_produto","vendas","vendasPorMarca","vendasPorGrupo","venda","marcaNome","produto","marca","nome","marcaVenda","parseFloat","total_preco","grupoNome","grupo_produto","grupoVenda","console","log","Object","keys","forEach","push","error","emitVenda","total_quantidade","currentMonth","$emit"],"sources":["/home/brenomatheus/Documentos/Teste Pratico DEV Junior/frontend/src/pages/Home/components/Venda/components/CategoryChartComponent.vue"],"sourcesContent":["<template>\n  <div class=\"pt-6\">\n    <div v-if=\"dataLoaded\" class=\"flex w-full\">\n      <div class=\"p-4 w-1/2\">\n        <h5 class=\"text-xl font-bold pb-2\">Vendas por Marca</h5>\n        <Bar\n          id=\"vendaMarca\"\n          :key=\"componentKey\"\n          :options=\"chartOptions\"\n          :data=\"ChartMarca\"\n        />\n      </div>\n      <div class=\"p-4 w-1/2\">\n        <h5 class=\"text-xl font-bold pb-2\">Vendas por Grupo</h5>\n        <Bar\n          :key=\"componentKey\"\n          id=\"vendaGrupo\"\n          :options=\"chartOptions\"\n          :data=\"ChartGrupo\"\n        />\n      </div>\n    </div>\n    <div v-else>\n      <p>Carregando dados...</p>\n    </div>\n  </div>\n</template>\n<script>\nimport VendasService from '@/services/api/vendas/VendasService';\nimport { Bar } from 'vue-chartjs';\nimport {\n  Chart as ChartJS,\n  Title,\n  Tooltip,\n  Legend,\n  BarElement,\n  CategoryScale,\n  LinearScale,\n} from 'chart.js';\nimport marcaService from '@/services/api/marca/marcaService';\nimport ServiceGrupoProduto from '@/services/api/grupoProduto/grupoProdutoService';\n\nChartJS.register(\n  Title,\n  Tooltip,\n  Legend,\n  BarElement,\n  CategoryScale,\n  LinearScale\n);\n\nexport default {\n  props: ['filter'],\n\n  name: 'BarChart',\n  components: { Bar },\n  data() {\n    return {\n      marcas: [],\n      grupos: [],\n      componentKey: 0,\n      loading: false,\n      dataLoaded: false,\n\n      ChartMarca: {\n        labels: [],\n        datasets: [\n          {\n            label: 'Total de vendas por marca',\n            backgroundColor: '#228B22',\n            data: [],\n          },\n        ],\n      },\n\n      ChartGrupo: {\n        labels: [],\n        datasets: [\n          {\n            label: 'Total de vendas por grupo',\n            backgroundColor: '#DAA520',\n            data: [],\n          },\n        ],\n      },\n\n      chartOptions: {\n        responsive: true,\n      },\n    };\n  },\n  watch: {\n    filter: {\n      immediate: true,\n      handler(newValue) {\n        this.getAll();\n      },\n    },\n  },\n  methods: {\n    async getAll() {\n      try {\n        let params = { all: '0', agrupar_produto: '1' };\n\n        this.loading = true;\n        const vendas = await VendasService.getAll(params);\n\n\n        const vendasPorMarca = {};\n        const vendasPorGrupo = {};\n\n        for (const venda of vendas) {\n          const marcaNome = venda.produto.marca.nome;\n          const marcaVenda = parseFloat(venda.total_preco);\n          const grupoNome = venda.produto.grupo_produto.nome;\n          const grupoVenda = parseFloat(venda.total_preco);\n\n          if (vendasPorMarca[marcaNome]) {\n            vendasPorMarca[marcaNome] += marcaVenda;\n          } else {\n            vendasPorMarca[marcaNome] = marcaVenda;\n          }\n\n          if (vendasPorGrupo[grupoNome]) {\n            vendasPorGrupo[grupoNome] += grupoVenda;\n          } else {\n            vendasPorGrupo[grupoNome] = grupoVenda;\n          }\n        }\n        \n        console.log(vendasPorGrupo);\n\n        Object.keys(vendasPorMarca).forEach(marca => {\n          this.ChartMarca.labels.push(marca);\n          this.ChartMarca.datasets[0].data.push(vendasPorMarca[marca]);\n        });\n\n        Object.keys(vendasPorGrupo).forEach(marca => {\n          this.ChartGrupo.labels.push(marca);\n          this.ChartGrupo.datasets[0].data.push(vendasPorGrupo[marca]);\n        });\n\n        this.dataLoaded = true;\n      } catch (error) {\n        this.emitVenda({\n          total_preco: 0,\n          total_quantidade: 'Não há registros',\n        });\n        this.ChartGrupo.labels = [];\n        this.ChartGrupo.datasets[0].data = [''];\n        this.ChartMarca.labels = [];\n        this.ChartMarca.datasets[0].data = [];\n        this.componentKey++;\n        console.error('Erro ao obter vendas:', error);\n      } finally {\n        this.loading = false;\n      }\n    },\n    emitVenda(currentMonth) {\n      this.$emit('currentMonth', currentMonth);\n    },\n  },\n};\n</script>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}