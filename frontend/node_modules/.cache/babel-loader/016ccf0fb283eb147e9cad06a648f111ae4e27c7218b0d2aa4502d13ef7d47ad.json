{"ast":null,"code":"import VendasService from '@/services/api/vendas/VendasService';\nimport { Bar } from 'vue-chartjs';\nimport { Chart as ChartJS, Title, Tooltip, Legend, BarElement, CategoryScale, LinearScale } from 'chart.js';\nChartJS.register(Title, Tooltip, Legend, BarElement, CategoryScale, LinearScale);\nexport default {\n  props: ['modelValue', 'cliente'],\n  emits: ['update:modelValue'],\n  name: 'BarChart',\n  components: {\n    Bar\n  },\n  data() {\n    return {\n      selectedPeople: this.modelValue,\n      loading: false,\n      dataLoaded: false,\n      chartData: {\n        labels: [],\n        datasets: [{\n          label: 'Total quantidade de vendas',\n          backgroundColor: '#87CEFA',\n          data: []\n        }]\n      },\n      chartOptions: {\n        responsive: true,\n        indexAxis: 'y'\n      }\n    };\n  },\n  watch: {\n    modelValue(newValue) {\n      this.selectedPeople = newValue;\n    }\n  },\n  methods: {\n    async getAll(cliente) {\n      try {\n        const params = {\n          all: '0',\n          agrupar_cliente: '1'\n        };\n        if (cliente == 0) {\n          const params = {\n            all: '0',\n            agrupar_cliente: '1'\n          };\n        } else {\n          const params = {\n            all: '0',\n            agrupar_cliente: '1'\n          };\n        }\n        this.loading = true;\n        const response = await VendasService.getAll(params);\n        this.chartData.datasets[0].data = response.map(item => parseFloat(item.total_preco.replace(',', '.')));\n        this.chartData.labels = response.map(item => item.pessoa.nome);\n        console.log(response.map(item => parseFloat(item.total_preco.replace(',', '.'))));\n        console.log(response.map(item => item.pessoa.nome));\n        this.dataLoaded = true;\n      } catch (error) {\n        console.error('Erro ao obter pessoas:', error);\n      } finally {\n        this.loading = false;\n      }\n    },\n    shouldApplyFilter() {\n      return this.selectedPeople;\n    },\n    buildParams() {\n      const params = {};\n      if (this.selectedPeople) {\n        params.pessoa_id = this.selectedPeople;\n      }\n      return params;\n    }\n  },\n  watch: {\n    selectedPeople() {\n      if (this.shouldApplyFilter()) {\n        this.getAll();\n      }\n    }\n  },\n  mounted() {\n    if (!this.cliente) {\n      this.getAll(0);\n    }\n  }\n};","map":{"version":3,"names":["VendasService","Bar","Chart","ChartJS","Title","Tooltip","Legend","BarElement","CategoryScale","LinearScale","register","props","emits","name","components","data","selectedPeople","modelValue","loading","dataLoaded","chartData","labels","datasets","label","backgroundColor","chartOptions","responsive","indexAxis","watch","newValue","methods","getAll","cliente","params","all","agrupar_cliente","response","map","item","parseFloat","total_preco","replace","pessoa","nome","console","log","error","shouldApplyFilter","buildParams","pessoa_id","mounted"],"sources":["/home/brenomatheus/Documentos/Teste Pratico DEV Junior/frontend/src/pages/Home/components/Venda/components/ClientesChartComponent.vue"],"sourcesContent":["<template>\n  <div class=\"pt-6\">\n    <h5 class=\"text-xl font-bold pb-2\">Total de Vendas</h5>\n    <Bar v-if=\"dataLoaded\" id=\"my-chart-id\" :options=\"chartOptions\" :data=\"chartData\" />\n    <div v-else>\n      <p>Carregando dados...</p>\n    </div>\n  </div>\n</template>\n\n<script>\nimport VendasService from '@/services/api/vendas/VendasService';\nimport { Bar } from 'vue-chartjs';\nimport {\n  Chart as ChartJS,\n  Title,\n  Tooltip,\n  Legend,\n  BarElement,\n  CategoryScale,\n  LinearScale,\n} from 'chart.js';\n\nChartJS.register(\n  Title,\n  Tooltip,\n  Legend,\n  BarElement,\n  CategoryScale,\n  LinearScale\n);\n\nexport default {\n  props: ['modelValue', 'cliente'],\n  emits: ['update:modelValue'],\n\n  name: 'BarChart',\n  components: { Bar },\n  data() {\n    return {\n      selectedPeople: this.modelValue,\n      loading: false,\n      dataLoaded: false, \n      chartData: {\n        labels: [],\n        datasets: [\n          {\n            label: 'Total quantidade de vendas',\n            backgroundColor: '#87CEFA',\n            data: [],\n          },\n        ],\n      },\n      chartOptions: {\n        responsive: true,\n        indexAxis: 'y',\n      },\n    };\n  },\n  watch: {\n    modelValue(newValue) {\n      this.selectedPeople = newValue;\n    },\n    \n  },\n  methods: {\n    async getAll(cliente) {\n      try {\n        const params = { all: '0', agrupar_cliente: '1' };\n        if(cliente == 0) {\n          const params = { all: '0', agrupar_cliente: '1' };\n        }else{\n          const params = { all: '0', agrupar_cliente: '1' };\n        }\n        this.loading = true;\n        const response = await VendasService.getAll(params);\n\n        this.chartData.datasets[0].data = response.map(item => parseFloat(item.total_preco.replace(',', '.')));\n        this.chartData.labels = response.map(item => item.pessoa.nome);\n        console.log(response.map(item => parseFloat(item.total_preco.replace(',', '.'))));\n        console.log(response.map(item => item.pessoa.nome));\n        this.dataLoaded = true;\n\n\n      } catch (error) {\n        console.error('Erro ao obter pessoas:', error);\n      } finally {\n        this.loading = false;\n      }\n    },\n    shouldApplyFilter() {\n      return this.selectedPeople;\n    },\n\n    buildParams() {\n      const params = {};\n      if (this.selectedPeople) {\n        params.pessoa_id = this.selectedPeople;\n      }\n      return params;\n    },\n  },\n  watch: {\n    selectedPeople() {\n      if (this.shouldApplyFilter()) {\n        this.getAll();\n      }\n    },\n  },\n  mounted() {\n    if (!this.cliente) {\n      this.getAll(0);\n    }\n  },\n};\n</script>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}