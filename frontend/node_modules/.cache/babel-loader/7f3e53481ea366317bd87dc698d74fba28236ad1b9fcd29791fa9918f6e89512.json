{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, toDisplayString as _toDisplayString, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h5\", {\n  class: \"text-2xl font-medium text-gray-900 dark:text-white text-center border-b-2 m-2 p-4 border-gray-900\"\n}, \" Pessoas \", -1 /* HOISTED */);\nexport function render(_ctx, _cache) {\n  const _component_FormComponent = _resolveComponent(\"FormComponent\");\n  const _component_ListComponent = _resolveComponent(\"ListComponent\");\n  const _component_DashboardComponent = _resolveComponent(\"DashboardComponent\");\n  return _openBlock(), _createBlock(_component_DashboardComponent, null, {\n    \"slot-pages\": _withCtx(() => [_hoisted_1, _createVNode(_component_FormComponent), _createVNode(_component_ListComponent), _createElementVNode(\"p\", null, _toDisplayString(_ctx.msg), 1 /* TEXT */)]),\n    _: 1 /* STABLE */\n  });\n}","map":{"version":3,"names":["_createElementVNode","class","_createBlock","_component_DashboardComponent","_withCtx","_hoisted_1","_createVNode","_component_FormComponent","_component_ListComponent","_toDisplayString","_ctx","msg","_"],"sources":["/home/brenomatheus/Documentos/Teste Pratico DEV Junior/frontend/src/pages/Pessoa/PessoaComponent.vue"],"sourcesContent":["<template>\n  <DashboardComponent>\n    <template v-slot:slot-pages>\n      <h5\n        class=\"text-2xl font-medium text-gray-900 dark:text-white text-center border-b-2 m-2 p-4 border-gray-900\"\n      >\n        Pessoas\n      </h5>\n      <FormComponent />\n      <ListComponent />\n      <p>{{ msg }}</p>\n    </template>\n  </DashboardComponent>\n</template>\n\n<script>\nimport DashboardComponent from '../Dashboard/DashboardComponent';\nimport FormComponent from './components/FormComponent';\nimport ListComponent from './components/ListComponent';\nimport axios from 'axios';\n\nexport default {\n  name: 'PessoaComponent',\n  data() {\n    return {\n      msg: 'Mensagem',\n      pessoas: [],\n    };\n  },\n\n  computed: {\n    PessoaId() {\n      return this.$route.params.id;\n    },\n  },\n\n  mounted() {\n    this.getPessoas();\n\n    //const PessoaId = this.$route.params.id;\n\n    fetch(`http://localhost:8000/api/pessoas`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n        Accept: 'application/json',\n      },\n    })\n      .then(response => response.json())\n      .then(res => (this.pessoa = res.data));\n  },\n\n  methods: {\n     async getAll(page = 1, filter = '', id = 0): Promise<TEquipmentTotalCount | Error> => {\n  try {\n    const urlRelativa = `/equipments?page=${page}&limit=${Environment.LIMITE_DE_LINHAS}&filter=${filter}&id=${id}`;\n\n    const { data, headers } = await Api().get(urlRelativa);\n\n    if (data) {\n      return {\n        data,\n        totalCount: Number(headers['x-total-count'] || Environment.LIMITE_DE_LINHAS),\n      };\n    }\n\n    return new Error('Erro ao listar os registros.');\n  } catch (error) {\n    console.error(error);\n    return new Error((error as AxiosError).response?.data.errors.default || 'Erro ao listar os registros.');\n  }\n};\n    async getPessoas() {\n      const response = await axios.get('http://localhost:8000/api/pessoas');\n      console.log(response);\n    },\n  },\n  components: {\n    DashboardComponent,\n    FormComponent,\n    ListComponent,\n  },\n};\n</script>\n"],"mappings":";gCAGMA,mBAAA,CAIK;EAHHC,KAAK,EAAC;AAAmG,GAC1G,WAED;;;;;uBANJC,YAAA,CAWqBC,6BAAA;IAVF,YAAU,EAAAC,QAAA,CACzB,MAIK,CAJLC,UAIK,EACLC,YAAA,CAAiBC,wBAAA,GACjBD,YAAA,CAAiBE,wBAAA,GACjBR,mBAAA,CAAgB,WAAAS,gBAAA,CAAVC,IAAA,CAAAC,GAAG,iB;IAVfC,CAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}