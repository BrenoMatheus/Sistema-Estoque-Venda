{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"pt-6\"\n};\nconst _hoisted_2 = {\n  key: 0\n};\nconst _hoisted_3 = {\n  class: \"p-4\"\n};\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"h5\", {\n  class: \"text-xl font-bold pb-2\"\n}, \"Vendas por Mês\", -1 /* HOISTED */);\nconst _hoisted_5 = {\n  class: \"p-4\"\n};\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"h5\", {\n  class: \"text-xl font-bold pb-2\"\n}, \"Valor total vendido por mês\", -1 /* HOISTED */);\nconst _hoisted_7 = {\n  key: 1\n};\nconst _hoisted_8 = /*#__PURE__*/_createElementVNode(\"p\", null, \"Carregando dados...\", -1 /* HOISTED */);\nconst _hoisted_9 = [_hoisted_8];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_Bar = _resolveComponent(\"Bar\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [$data.dataLoaded ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_hoisted_4, (_openBlock(), _createBlock(_component_Bar, {\n    id: \"QtdMes\",\n    key: $data.componentKey,\n    options: $data.chartOptions,\n    data: $data.ChartQtd\n  }, null, 8 /* PROPS */, [\"options\", \"data\"]))]), _createElementVNode(\"div\", _hoisted_5, [_hoisted_6, (_openBlock(), _createBlock(_component_Bar, {\n    id: \"ValorMes\",\n    options: $data.chartOptions,\n    data: $data.ChartValor,\n    key: $data.componentKey\n  }, null, 8 /* PROPS */, [\"options\", \"data\"]))])])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_7, [..._hoisted_9]))]);\n}","map":{"version":3,"names":["class","key","_createElementVNode","_hoisted_8","_createElementBlock","_hoisted_1","$data","dataLoaded","_hoisted_2","_hoisted_3","_hoisted_4","_createBlock","_component_Bar","id","componentKey","options","chartOptions","data","ChartQtd","_hoisted_5","_hoisted_6","ChartValor","_hoisted_7","_hoisted_9"],"sources":["/home/brenomatheus/Documentos/Teste Pratico DEV Junior/frontend/src/pages/Home/components/Venda/components/VendasChartComponent.vue"],"sourcesContent":["<template>\n  <div class=\"pt-6\">\n    <div v-if=\"dataLoaded\">\n      <div class=\"p-4\">\n        <h5 class=\"text-xl font-bold pb-2\">Vendas por Mês</h5>\n        <Bar\n          id=\"QtdMes\"\n          :key=\"componentKey\"\n          :options=\"chartOptions\"\n          :data=\"ChartQtd\"\n        />\n      </div>\n      <div class=\"p-4\">\n        <h5 class=\"text-xl font-bold pb-2\">Valor total vendido por mês</h5>\n        <Bar\n          id=\"ValorMes\"\n          :options=\"chartOptions\"\n          :data=\"ChartValor\"\n          :key=\"componentKey\"\n        />\n      </div>\n    </div>\n    <div v-else>\n      <p>Carregando dados...</p>\n    </div>\n  </div>\n</template>\n<script>\nimport VendasService from '@/services/api/vendas/VendasService';\nimport { Bar } from 'vue-chartjs';\nimport {\n  Chart as ChartJS,\n  Title,\n  Tooltip,\n  Legend,\n  BarElement,\n  CategoryScale,\n  LinearScale,\n} from 'chart.js';\n\nChartJS.register(\n  Title,\n  Tooltip,\n  Legend,\n  BarElement,\n  CategoryScale,\n  LinearScale\n);\n\nconst meses = [\n  'Janeiro',\n  'Fevereiro',\n  'Março',\n  'Abril',\n  'Maio',\n  'Junho',\n  'Julho',\n  'Agosto',\n  'Setembro',\n  'Outubro',\n  'Novembro',\n  'Dezembro',\n];\n\nexport default {\n  props: ['filter'],\n\n  name: 'BarChart',\n  components: { Bar },\n  data() {\n    return {\n      componentKey: 0,\n      loading: false,\n      dataLoaded: false,\n\n      ChartValor: {\n        labels: [],\n        datasets: [\n          {\n            label: 'Valor total por mês',\n            backgroundColor: '#228B22',\n            data: [],\n          },\n        ],\n      },\n\n      ChartQtd: {\n        labels: [],\n        datasets: [\n          {\n            label: 'Total de vendas por mês',\n            backgroundColor: '#DAA520',\n            data: [],\n          },\n        ],\n      },\n\n      chartOptions: {\n        responsive: true,\n      },\n    };\n  },\n  watch: {\n    filter: {\n      immediate: true,\n      handler(newValue) {\n        this.getAll();\n      },\n    },\n  },\n  methods: {\n    getNomeMes(numeroMes) {\n      return meses[numeroMes - 1];\n    },\n    async getAll() {\n      try {\n        let params = { all: '0', agrupar_mes: '1' };\n\n        if (this.filter !== null && Object.keys(this.filter).length > 0) {\n          console.log(this.filter.pessoa_id);\n\n          switch (true) {\n            case this.filter.ord_data !== undefined:\n              const NewFilter = delete this.filter.ord_data;\n              params = { all: '0', agrupar_mes: '1', ...NewFilter };\n              console.log('aaa',params)\n\n            case this.filter.ord_valor !== undefined:\n              NewFilter = delete this.filter.ord_valor;\n              params = { all: '0', agrupar_mes: '1', ...NewFilter };\n              console.log('bbb',params)\n              break;\n            default:\n              params = { all: '0', agrupar_mes: '1', ...this.filter };\n              break;\n          }\n        }\n        console.log('ccc',params)\n        this.loading = true;\n        const response = await VendasService.getAll(params);\n\n        const currentMonth = new Date().getMonth();\n        this.ChartValor.labels = [];\n        this.ChartValor.datasets[0].data = [];\n        this.ChartQtd.labels = [];\n        this.ChartQtd.datasets[0].data = [];\n\n        for (let item of response) {\n          if (item.mes == currentMonth) {\n            this.currentMonth = item;\n            this.emitVenda(item);\n          }\n\n          this.ChartValor.labels.push(this.getNomeMes(item.mes));\n          this.ChartQtd.labels.push(this.getNomeMes(item.mes));\n          this.ChartValor.datasets[0].data.push(\n            parseFloat(item.total_preco.replace(',', '.'))\n          );\n          this.ChartQtd.datasets[0].data.push(item.total_quantidade);\n\n          this.componentKey++;\n        }\n\n        this.dataLoaded = true;\n      } catch (error) {\n        this.ChartValor.labels = [];\n        this.ChartValor.datasets[0].data = [''];\n        this.ChartQtd.labels = [];\n        this.ChartQtd.datasets[0].data = [];\n        this.componentKey++;\n        console.error('Erro ao obter vendas:', error);\n      } finally {\n        this.loading = false;\n      }\n    },\n    emitVenda(currentMonth) {\n      this.$emit('currentMonth', currentMonth);\n    },\n  },\n};\n</script>\n"],"mappings":";;EACOA,KAAK,EAAC;AAAM;;EADnBC,GAAA;AAAA;;EAGWD,KAAK,EAAC;AAAK;gCACdE,mBAAA,CAAsD;EAAlDF,KAAK,EAAC;AAAwB,GAAC,gBAAc;;EAQ9CA,KAAK,EAAC;AAAK;gCACdE,mBAAA,CAAmE;EAA/DF,KAAK,EAAC;AAAwB,GAAC,6BAA2B;;EAbtEC,GAAA;AAAA;gCAuBMC,mBAAA,CAA0B,WAAvB,qBAAmB;oBAAtBC,UAA0B,C;;;uBAtB9BC,mBAAA,CAwBM,OAxBNC,UAwBM,GAvBOC,KAAA,CAAAC,UAAU,I,cAArBH,mBAAA,CAmBM,OArBVI,UAAA,GAGMN,mBAAA,CAQM,OARNO,UAQM,GAPJC,UAAsD,G,cACtDC,YAAA,CAKEC,cAAA;IAJAC,EAAE,EAAC,QAAQ;IACVZ,GAAG,EAAEK,KAAA,CAAAQ,YAAY;IACjBC,OAAO,EAAET,KAAA,CAAAU,YAAY;IACrBC,IAAI,EAAEX,KAAA,CAAAY;mDAGXhB,mBAAA,CAQM,OARNiB,UAQM,GAPJC,UAAmE,G,cACnET,YAAA,CAKEC,cAAA;IAJAC,EAAE,EAAC,UAAU;IACZE,OAAO,EAAET,KAAA,CAAAU,YAAY;IACrBC,IAAI,EAAEX,KAAA,CAAAe,UAAU;IAChBpB,GAAG,EAAEK,KAAA,CAAAQ;sEAIZV,mBAAA,CAEM,OAxBVkB,UAAA,MAAAC,UAAA,I"},"metadata":{},"sourceType":"module","externalDependencies":[]}