{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport VendasService from '@/services/api/vendas/VendasService';\nimport { Bar } from 'vue-chartjs';\nimport { Chart as ChartJS, Title, Tooltip, Legend, BarElement, CategoryScale, LinearScale } from 'chart.js';\nChartJS.register(Title, Tooltip, Legend, BarElement, CategoryScale, LinearScale);\nexport default {\n  props: ['filter'],\n  emits: ['update:modelValue'],\n  name: 'BarChart',\n  components: {\n    Bar\n  },\n  data() {\n    return {\n      componentKey: 0,\n      loading: false,\n      dataLoaded: false,\n      chartData: {\n        labels: [],\n        datasets: [{\n          label: 'Total de vendas por produto',\n          backgroundColor: this.getRandomColor(),\n          data: []\n        }]\n      },\n      chartOptions: {\n        responsive: true,\n        indexAxis: 'y'\n      }\n    };\n  },\n  watch: {\n    filter: {\n      immediate: true,\n      handler(newValue) {\n        this.getAll();\n      }\n    }\n  },\n  methods: {\n    getRandomColor() {\n      // Gera um valor hexadecimal aleatório\n      const randomColor = Math.floor(Math.random() * 16777215).toString(16);\n      // Retorna a cor no formato hexadecimal com uma almofada para a esquerda\n      return '#' + randomColor.padStart(6, '0');\n    },\n    async getAll() {\n      try {\n        let params = {\n          all: '0',\n          agrupar_produto: '1'\n        };\n        if (this.filter !== null && Object.keys(this.filter).length > 0) {\n          switch (true) {\n            case this.filter.ord_data !== undefined:\n              delete this.filter.ord_data;\n            case this.filter.ord_valor !== undefined:\n              this.filter.ord_mes_valor = this.filter.ord_valor;\n              delete this.filter.ord_valor;\n            default:\n              params = {\n                all: '0',\n                agrupar_produto: '1',\n                ...this.filter\n              };\n              break;\n          }\n        }\n        this.loading = true;\n        const response = await VendasService.getAll(params);\n        this.chartData.labels = [];\n        this.chartData.datasets[0].data = [];\n        for (let item of response) {\n          this.chartData.labels.push(item.produto.nome);\n          this.chartData.datasets[0].data.push(parseFloat(item.total_preco.replace(',', '.')));\n          this.componentKey++;\n        }\n        this.dataLoaded = true;\n      } catch (error) {\n        this.chartData.labels = [];\n        this.chartData.datasets[0].data = [''];\n        this.componentKey++;\n        console.error('Erro ao obter vendas:', error);\n      } finally {\n        this.loading = false;\n      }\n    }\n  }\n};","map":{"version":3,"names":["VendasService","Bar","Chart","ChartJS","Title","Tooltip","Legend","BarElement","CategoryScale","LinearScale","register","props","emits","name","components","data","componentKey","loading","dataLoaded","chartData","labels","datasets","label","backgroundColor","getRandomColor","chartOptions","responsive","indexAxis","watch","filter","immediate","handler","newValue","getAll","methods","randomColor","Math","floor","random","toString","padStart","params","all","agrupar_produto","Object","keys","length","ord_data","undefined","ord_valor","ord_mes_valor","response","item","push","produto","nome","parseFloat","total_preco","replace","error","console"],"sources":["/home/brenomatheus/Documentos/Teste Pratico DEV Junior/frontend/src/pages/Home/components/Venda/components/ProdutosChartComponent.vue"],"sourcesContent":["<template>\n  <div class=\"pt-6\">\n    <h5 class=\"text-xl font-bold pb-2\">Produtos vendidos</h5>\n    <Bar\n      v-if=\"dataLoaded\"\n      id=\"my-chart-id\"\n      :key=\"componentKey\"\n      :options=\"chartOptions\"\n      :data=\"chartData\"\n    />\n    <div v-else>\n      <p>Carregando dados...</p>\n    </div>\n  </div>\n</template>\n<script>\nimport VendasService from '@/services/api/vendas/VendasService';\nimport { Bar } from 'vue-chartjs';\nimport {\n  Chart as ChartJS,\n  Title,\n  Tooltip,\n  Legend,\n  BarElement,\n  CategoryScale,\n  LinearScale,\n} from 'chart.js';\n\nChartJS.register(\n  Title,\n  Tooltip,\n  Legend,\n  BarElement,\n  CategoryScale,\n  LinearScale\n);\n\nexport default {\n  props: ['filter'],\n  emits: ['update:modelValue'],\n\n  name: 'BarChart',\n  components: { Bar },\n  data() {\n    return {\n      componentKey: 0,\n      loading: false,\n      dataLoaded: false,\n      chartData: {\n        labels: [],\n        datasets: [\n          {\n            label: 'Total de vendas por produto',\n            backgroundColor: this.getRandomColor(),\n            data: [],\n          },\n        ],\n      },\n      chartOptions: {\n        responsive: true,\n        indexAxis: 'y',\n      },\n    };\n  },\n  watch: {\n    filter: {\n      immediate: true,\n      handler(newValue) {\n        this.getAll();\n      },\n    },\n  },\n  methods: {\n    getRandomColor() {\n      // Gera um valor hexadecimal aleatório\n      const randomColor = Math.floor(Math.random() * 16777215).toString(16);\n      // Retorna a cor no formato hexadecimal com uma almofada para a esquerda\n      return '#' + randomColor.padStart(6, '0');\n    },\n    async getAll() {\n      try {\n        let params = { all: '0', agrupar_produto: '1' };\n\n        if (this.filter !== null && Object.keys(this.filter).length > 0) {\n          switch (true) {\n            case this.filter.ord_data !== undefined:\n              delete this.filter.ord_data;\n\n            case this.filter.ord_valor !== undefined:\n              this.filter.ord_mes_valor = this.filter.ord_valor;\n              delete this.filter.ord_valor;\n\n            default:\n              params = { all: '0', agrupar_produto: '1', ...this.filter };\n              break;\n          }\n        }\n\n        this.loading = true;\n        const response = await VendasService.getAll(params);\n        this.chartData.labels = [];\n        this.chartData.datasets[0].data = [];\n\n        for (let item of response) {\n          this.chartData.labels.push(item.produto.nome);\n          this.chartData.datasets[0].data.push(\n            parseFloat(item.total_preco.replace(',', '.'))\n          );\n\n          this.componentKey++;\n        }\n\n        this.dataLoaded = true;\n      } catch (error) {\n        this.chartData.labels = [];\n        this.chartData.datasets[0].data = [''];\n        this.componentKey++;\n        console.error('Erro ao obter vendas:', error);\n      } finally {\n        this.loading = false;\n      }\n    },\n  },\n};\n</script>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}