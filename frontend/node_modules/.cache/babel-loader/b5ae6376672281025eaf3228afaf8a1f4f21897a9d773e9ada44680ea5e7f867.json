{"ast":null,"code":"import marcaService from '@/shared/services/api/marca/marcaService';\nexport default {\n  props: ['modelValue', 'initialGroup'],\n  emits: ['update:modelValue'],\n  data() {\n    return {\n      selectedBrand: this.modelValue,\n      marcas: [],\n      loading: false\n    };\n  },\n  watch: {\n    modelValue(newValue) {\n      this.selectedBrand = newValue;\n    },\n    selectedBrand(newValue) {\n      this.$emit('update:modelValue', newValue);\n    }\n  },\n  methods: {\n    async getAll() {\n      try {\n        this.loading = true;\n        const response = await marcaService.getAll();\n        this.marcas = response;\n      } catch (error) {\n        console.error('Erro ao obter marcas:', error);\n      } finally {\n        this.loading = false;\n      }\n    },\n    emitBrand() {\n      this.$emit('update:modelValue', this.selectedBrand);\n      this.$emit('brand-selected', this.selectedBrand);\n    }\n  },\n  mounted() {\n    if (!this.initialGroup) {\n      this.getAll();\n    }\n  }\n};","map":{"version":3,"names":["marcaService","props","emits","data","selectedBrand","modelValue","marcas","loading","watch","newValue","$emit","methods","getAll","response","error","console","emitBrand","mounted","initialGroup"],"sources":["/home/brenomatheus/Documentos/Teste Pratico DEV Junior/frontend/src/pages/Produto/components/SelectBrandComponent.vue"],"sourcesContent":["<template>\n  <select\n    v-model=\"selectedBrand\"\n    @change=\"emitBrand\"\n    class=\"py-2 px-3 rounded mr-4 shadow-lg bg-gray-200 shadow-indigo-500/40 dark:bg-gray-600 dark:shadow-gray-600/40 border-2 border-gray-300\"\n  >\n    <option value=\"\" selected>Todos as marcas</option>\n    <option v-for=\"marca in marcas\" :key=\"marca.id\" :value=\"marca.id\">\n      {{ marca.nome }}\n    </option>\n  </select>\n</template>\n\n<script>\nimport marcaService from '@/shared/services/api/marca/marcaService';\n\nexport default {\n  props: ['modelValue', 'initialGroup'],\n  emits: ['update:modelValue'],\n\n  data() {\n    return {\n      selectedBrand: this.modelValue,\n      marcas: [],\n      loading: false,\n    };\n  },\n  watch: {\n    modelValue(newValue) {\n      this.selectedBrand = newValue;\n    },\n    selectedBrand(newValue) {\n      this.$emit('update:modelValue', newValue);\n    },\n  },\n  methods: {\n    async getAll() {\n      try {\n        this.loading = true;\n        const response = await marcaService.getAll();\n        this.marcas = response;\n      } catch (error) {\n        console.error('Erro ao obter marcas:', error);\n      } finally {\n        this.loading = false;\n      }\n    },\n    emitBrand() {\n      this.$emit('update:modelValue', this.selectedBrand);\n      this.$emit('brand-selected', this.selectedBrand);\n    }\n  },\n  mounted() {\n    if (!this.initialGroup) {\n      this.getAll();\n    }\n  },\n};\n</script>\nshared/api/marca/marcaServiceshared/services/api/marca/marcaService"],"mappings":"AAcA,OAAOA,YAAW,MAAO,0CAA0C;AAEnE,eAAe;EACbC,KAAK,EAAE,CAAC,YAAY,EAAE,cAAc,CAAC;EACrCC,KAAK,EAAE,CAAC,mBAAmB,CAAC;EAE5BC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,aAAa,EAAE,IAAI,CAACC,UAAU;MAC9BC,MAAM,EAAE,EAAE;MACVC,OAAO,EAAE;IACX,CAAC;EACH,CAAC;EACDC,KAAK,EAAE;IACLH,UAAUA,CAACI,QAAQ,EAAE;MACnB,IAAI,CAACL,aAAY,GAAIK,QAAQ;IAC/B,CAAC;IACDL,aAAaA,CAACK,QAAQ,EAAE;MACtB,IAAI,CAACC,KAAK,CAAC,mBAAmB,EAAED,QAAQ,CAAC;IAC3C;EACF,CAAC;EACDE,OAAO,EAAE;IACP,MAAMC,MAAMA,CAAA,EAAG;MACb,IAAI;QACF,IAAI,CAACL,OAAM,GAAI,IAAI;QACnB,MAAMM,QAAO,GAAI,MAAMb,YAAY,CAACY,MAAM,CAAC,CAAC;QAC5C,IAAI,CAACN,MAAK,GAAIO,QAAQ;MACxB,EAAE,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC/C,UAAU;QACR,IAAI,CAACP,OAAM,GAAI,KAAK;MACtB;IACF,CAAC;IACDS,SAASA,CAAA,EAAG;MACV,IAAI,CAACN,KAAK,CAAC,mBAAmB,EAAE,IAAI,CAACN,aAAa,CAAC;MACnD,IAAI,CAACM,KAAK,CAAC,gBAAgB,EAAE,IAAI,CAACN,aAAa,CAAC;IAClD;EACF,CAAC;EACDa,OAAOA,CAAA,EAAG;IACR,IAAI,CAAC,IAAI,CAACC,YAAY,EAAE;MACtB,IAAI,CAACN,MAAM,CAAC,CAAC;IACf;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}