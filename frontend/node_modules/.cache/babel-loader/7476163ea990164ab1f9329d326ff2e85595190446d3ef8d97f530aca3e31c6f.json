{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport VendasService from '@/services/api/vendas/VendasService';\nimport { Bar } from 'vue-chartjs';\nimport { Chart as ChartJS, Title, Tooltip, Legend, BarElement, CategoryScale, LinearScale } from 'chart.js';\nChartJS.register(Title, Tooltip, Legend, BarElement, CategoryScale, LinearScale);\nexport default {\n  props: ['modelValue', 'cliente'],\n  emits: ['update:modelValue'],\n  name: 'BarChart',\n  components: {\n    Bar\n  },\n  data() {\n    return {\n      componentKey: 0,\n      selectedPeople: this.modelValue,\n      loading: false,\n      dataLoaded: false,\n      chartData: {\n        labels: [],\n        datasets: [{\n          label: 'Total de vendas por cliente',\n          backgroundColor: '#87CEFA',\n          data: []\n        }]\n      },\n      chartOptions: {\n        responsive: true,\n        indexAxis: 'y'\n      }\n    };\n  },\n  watch: {\n    modelValue(newValue) {\n      this.selectedPeople = newValue;\n    },\n    cliente: {\n      immediate: true,\n      handler(newValue) {\n        this.getAll();\n      }\n    }\n  },\n  methods: {\n    async getAll() {\n      try {\n        let params = {\n          all: '0',\n          agrupar_cliente: '1'\n        };\n        this.loading = true;\n        const response = await VendasService.getAll(params);\n        console.log(response.lengh);\n        console.log(response);\n        this.chartData.labels = [];\n        this.chartData.datasets[0].data = [];\n\n        // Atualiza com novos dados\n        for (let item of response) {\n          this.chartData.labels.push(item.pessoa.nome);\n          this.chartData.datasets[0].data.push(parseFloat(item.total_preco.replace(',', '.')));\n          this.componentKey++;\n        }\n        this.dataLoaded = true;\n      } catch (error) {\n        this.chartData.labels = [];\n        this.chartData.datasets[0].data = [''];\n        this.componentKey++;\n        console.error('Erro ao obter vendas:', error);\n      } finally {\n        this.loading = false;\n      }\n    }\n  }\n};","map":{"version":3,"names":["VendasService","Bar","Chart","ChartJS","Title","Tooltip","Legend","BarElement","CategoryScale","LinearScale","register","props","emits","name","components","data","componentKey","selectedPeople","modelValue","loading","dataLoaded","chartData","labels","datasets","label","backgroundColor","chartOptions","responsive","indexAxis","watch","newValue","cliente","immediate","handler","getAll","methods","params","all","agrupar_cliente","response","console","log","lengh","item","push","pessoa","nome","parseFloat","total_preco","replace","error"],"sources":["/home/brenomatheus/Documentos/Teste Pratico DEV Junior/frontend/src/pages/Home/components/Venda/components/MediaTableComponent.vue"],"sourcesContent":["<template>\n    <div class=\"pt-6\">\n      <h5 class=\"text-xl font-bold pb-2\">Vendas por Cliente</h5>\n      <Bar\n        v-if=\"dataLoaded\"\n        id=\"my-chart-id\"\n        :key=\"componentKey\"\n        :options=\"chartOptions\"\n        :data=\"chartData\"\n      />\n      <div v-else>\n        <p>Carregando dados...</p>\n      </div>\n    </div>\n  </template>\n  <script>\n  import VendasService from '@/services/api/vendas/VendasService';\n  import { Bar } from 'vue-chartjs';\n  import {\n    Chart as ChartJS,\n    Title,\n    Tooltip,\n    Legend,\n    BarElement,\n    CategoryScale,\n    LinearScale,\n  } from 'chart.js';\n  \n  ChartJS.register(\n    Title,\n    Tooltip,\n    Legend,\n    BarElement,\n    CategoryScale,\n    LinearScale\n  );\n  \n  export default {\n    props: ['modelValue', 'cliente'],\n    emits: ['update:modelValue'],\n  \n    name: 'BarChart',\n    components: { Bar },\n    data() {\n      return {\n        componentKey: 0,\n        selectedPeople: this.modelValue,\n        loading: false,\n        dataLoaded: false,\n        chartData: {\n          labels: [],\n          datasets: [\n            {\n              label: 'Total de vendas por cliente',\n              backgroundColor: '#87CEFA',\n              data: [],\n            },\n          ],\n        },\n        chartOptions: {\n          responsive: true,\n          indexAxis: 'y',\n        },\n      };\n    },\n    watch: {\n      modelValue(newValue) {\n        this.selectedPeople = newValue;\n      },\n      cliente: {\n        immediate: true,\n        handler(newValue) {\n          this.getAll();\n        },\n      },\n    },\n    methods: {\n      async getAll() {\n        try {\n          let params = { all: '0', agrupar_cliente: '1' };\n          \n          this.loading = true;\n          const response = await VendasService.getAll(params);\n          console.log(response.lengh);\n  \n          console.log(response);\n          this.chartData.labels = [];\n          this.chartData.datasets[0].data = [];\n  \n          // Atualiza com novos dados\n          for (let item of response) {\n            this.chartData.labels.push(item.pessoa.nome);\n            this.chartData.datasets[0].data.push(\n              parseFloat(item.total_preco.replace(',', '.'))\n            );\n  \n            this.componentKey++;\n          }\n  \n          this.dataLoaded = true;\n        } catch (error) {\n          this.chartData.labels = [];\n          this.chartData.datasets[0].data = [''];\n          this.componentKey++;\n          console.error('Erro ao obter vendas:', error);\n        } finally {\n          this.loading = false;\n        }\n      },\n    },\n  };\n  </script>\n  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}