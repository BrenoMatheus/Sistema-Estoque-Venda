{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport PessoasService from '../../services/api/pessoas/PessoasService';\nimport DashboardComponent from '../Dashboard/DashboardComponent';\nimport Pagination from 'vuejs-paginate';\nimport { useRouter } from 'vue-router';\nexport default {\n  name: 'ListComponent',\n  components: {\n    DashboardComponent,\n    Pagination\n  },\n  data() {\n    return {\n      searchQuery: '',\n      selectedGroup: '',\n      selectedGender: '',\n      selectedAge: '',\n      people: [],\n      // Dados da tabela\n      currentPage: 1,\n      // Página atual\n      itemsPerPage: 10 // Número de itens por página\n    };\n  },\n  computed: {\n    paginatedPeople() {\n      const startIndex = (this.currentPage - 1) * this.itemsPerPage;\n      const endIndex = startIndex + this.itemsPerPage;\n      return this.filteredPeople.slice(startIndex, endIndex);\n    },\n    filteredPeople() {\n      let filtered = this.people;\n      if (this.searchQuery) filtered = filtered.filter(person => person.name.toLowerCase().includes(this.searchQuery.toLowerCase()));\n      if (this.selectedGroup) filtered = filtered.filter(person => person.group === this.selectedGroup);\n      if (this.selectedGender) filtered = filtered.filter(person => person.gender === this.selectedGender);\n      if (this.selectedAge) filtered = filtered.filter(person => person.age === parseInt(this.selectedAge));\n      return filtered;\n    },\n    totalPages() {\n      return Math.ceil(this.filteredPeople.length / this.itemsPerPage);\n    }\n  },\n  methods: {\n    editar(id) {\n      this.$router.push(`/pessoa/detalhes/${id}`);\n    },\n    async fetchPeople() {\n      try {\n        const startIndex = (this.currentPage - 1) * this.itemsPerPage;\n        const endIndex = startIndex + this.itemsPerPage;\n        const response = await this.getAll(); // Obtém todos os dados\n        this.people = response.pessoa.slice(startIndex, endIndex); // Filtra os dados da página atual\n      } catch (error) {\n        console.error('Erro ao buscar pessoas:', error);\n      }\n    },\n    async onPageChange(newPage) {\n      this.currentPage = newPage;\n      await this.fetchPeople(); // Chama o método para buscar os dados da nova página\n    },\n    async remover(id) {\n      try {\n        await PessoasService.remover(id);\n        console.log('Pessoa removida com sucesso!');\n        window.location.reload();\n      } catch (error) {\n        console.error('Erro ao remover pessoa:', error);\n      }\n    }\n  },\n  mounted() {\n    this.getAll();\n  },\n  created() {\n    // Aqui você deve buscar os dados da tabela ao inicializar o componente\n    // Exemplo fictício de dados\n    this.people = [{\n      id: 1,\n      name: 'Alice',\n      age: 25,\n      gender: 'female',\n      group: 'Grupo A'\n    }, {\n      id: 2,\n      name: 'Bob',\n      age: 30,\n      gender: 'male',\n      group: 'Grupo B'\n    }, {\n      id: 3,\n      name: 'Charlie',\n      age: 40,\n      gender: 'male',\n      group: 'Grupo A'\n    }\n    // Mais dados...\n    ];\n  }\n};","map":{"version":3,"names":["PessoasService","DashboardComponent","Pagination","useRouter","name","components","data","searchQuery","selectedGroup","selectedGender","selectedAge","people","currentPage","itemsPerPage","computed","paginatedPeople","startIndex","endIndex","filteredPeople","slice","filtered","filter","person","toLowerCase","includes","group","gender","age","parseInt","totalPages","Math","ceil","length","methods","editar","id","$router","push","fetchPeople","response","getAll","pessoa","error","console","onPageChange","newPage","remover","log","window","location","reload","mounted","created"],"sources":["/home/brenomatheus/Documentos/Teste Pratico DEV Junior/frontend/src/pages/Pessoa/ListComponent.vue"],"sourcesContent":["<template>\n  <DashboardComponent>\n    <template v-slot:slot-pages>\n      <h5\n        class=\"text-2xl font-medium text-gray-900 dark:text-white text-center border-b-2 m-2 p-4 border-gray-900\"\n      >\n        Pessoas\n      </h5>\n      <div class=\"flex justify-center items-center pt-10\">\n        <div class=\"w-full p-4 sm:p-6 md:p-8 dark:bg-gray-800\">\n          <div class=\"w-full\">\n            <div class=\"mb-4 flex items-center justify-between\">\n              <input\n                type=\"text\"\n                v-model=\"searchQuery\"\n                class=\"py-2 px-3 w-1/3 rounded border\"\n                placeholder=\"Pesquisar...\"\n              />\n              <span class=\"border rounded py-3 px-3 bg-slate-300\">\n                <i class=\"fa-solid fa-magnifying-glass\"></i>\n              </span>\n            </div>\n            <div class=\"flex items-center justify-between mb-4\">\n              <select\n                v-model=\"selectedGroup\"\n                class=\"py-2 px-3 rounded border mr-4\"\n              >\n                <option value=\"\" selected>Todos os grupos</option>\n                <option\n                  v-for=\"group in groups\"\n                  :key=\"group.id\"\n                  :value=\"group.id\"\n                >\n                  {{ group.name }}\n                </option>\n              </select>\n              <select\n                v-model=\"selectedGender\"\n                class=\"py-2 px-3 rounded border mr-4\"\n              >\n                <option value=\"\" selected>Todos os gêneros</option>\n                <option value=\"male\">Homem</option>\n                <option value=\"female\">Mulher</option>\n                <option value=\"other\">Outro</option>\n              </select>\n              <input\n                type=\"number\"\n                v-model=\"selectedAge\"\n                class=\"py-2 px-3 rounded border mr-4\"\n                placeholder=\"Idade\"\n              />\n            </div>\n          </div>\n          <div\n            class=\"relative overflow-x-auto overflow-y-auto shadow-md sm:rounded-lg\"\n          >\n            <table\n              class=\"w-full text-sm text-left rtl:text-right text-gray-500 dark:text-gray-400\"\n            >\n              <thead\n                class=\"text-xs text-gray-700 uppercase bg-gray-50 dark:bg-gray-700 dark:text-gray-400\"\n              >\n                <tr>\n                  <th scope=\"col\" class=\"px-6 py-3\">Nome</th>\n                  <th scope=\"col\" class=\"px-6 py-3\">Gênero</th>\n                  <th scope=\"col\" class=\"px-6 py-3\">Idade</th>\n                  <th scope=\"col\" class=\"px-6 py-3\">Grupo</th>\n                  <th scope=\"col\" class=\"px-6 py-3\">Ação</th>\n                </tr>\n              </thead>\n              <tbody>\n                <tr\n                v-for=\"row in paginatedPeople\"\n                :key=\"row.pessoa.id\"\n                class=\"odd:bg-white odd:dark:bg-gray-900 even:bg-gray-50 even:dark:bg-gray-800 border-b dark:border-gray-700\"\n              >\n                  <th\n                    scope=\"row\"\n                    class=\"px-6 py-4 font-medium text-gray-900 whitespace-nowrap dark:text-white\"\n                  >\n                    {{ row.pessoa.nome }}\n                  </th>\n                  <td class=\"px-6 py-4\">{{ row.pessoa.genero }}</td>\n                  <td class=\"px-6 py-4\">{{ row.pessoa.idade }}</td>\n                  <td class=\"px-6 py-4\">{{ row.grupo.nome }}</td>\n                  <td class=\"px-6 py-4\">\n                    <a\n                      @click=\"editar(row.pessoa.id)\"\n                      class=\"text-blue-600 pr-4 hover:text-white dark:text-blue-500 hover:underline hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800\"\n                    >\n                      <i class=\"text-xl fa-solid fa-eye\"></i>\n                    </a>\n                    <a\n                      @click=\"remover(row.pessoa.id)\"\n                      class=\"text-blue-600 hover:text-white dark:text-blue-500 hover:underline hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800\"\n                    >\n                      <i class=\"text-xl fa-solid fa-trash\"></i>\n                    </a>\n                  </td>\n                </tr>\n              </tbody>\n            </table>\n          </div>\n          <!-- Paginação -->\n          <div class=\"mt-4\">\n            <pagination\n              :total=\"totalPages\"\n              v-model=\"currentPage\"\n              @input=\"fetchPeople\"\n            ></pagination>\n          </div>\n        </div>\n      </div>\n    </template>\n  </DashboardComponent>\n</template>\n\n<script>\nimport PessoasService from '../../services/api/pessoas/PessoasService';\nimport DashboardComponent from '../Dashboard/DashboardComponent';\nimport Pagination from 'vuejs-paginate';\nimport { useRouter } from 'vue-router';\n\nexport default {\n  name: 'ListComponent',\n  components: {\n    DashboardComponent,\n    Pagination,\n  },\n  data() {\n    return {\n      searchQuery: '',\n      selectedGroup: '',\n      selectedGender: '',\n      selectedAge: '',\n      people: [], // Dados da tabela\n      currentPage: 1, // Página atual\n      itemsPerPage: 10, // Número de itens por página\n    };\n  },\n  computed: {\n    paginatedPeople() {\n      const startIndex = (this.currentPage - 1) * this.itemsPerPage;\n      const endIndex = startIndex + this.itemsPerPage;\n      return this.filteredPeople.slice(startIndex, endIndex);\n    },\n    filteredPeople() {\n      let filtered = this.people;\n      if (this.searchQuery)\n        filtered = filtered.filter(person =>\n          person.name.toLowerCase().includes(this.searchQuery.toLowerCase())\n        );\n      if (this.selectedGroup)\n        filtered = filtered.filter(\n          person => person.group === this.selectedGroup\n        );\n      if (this.selectedGender)\n        filtered = filtered.filter(\n          person => person.gender === this.selectedGender\n        );\n      if (this.selectedAge)\n        filtered = filtered.filter(\n          person => person.age === parseInt(this.selectedAge)\n        );\n      return filtered;\n    },\n    totalPages() {\n      return Math.ceil(this.filteredPeople.length / this.itemsPerPage);\n    },\n  },\n  methods: {\n    editar(id) {\n      this.$router.push(`/pessoa/detalhes/${id}`);\n    },\n    async fetchPeople() {\n      try {\n        const startIndex = (this.currentPage - 1) * this.itemsPerPage;\n        const endIndex = startIndex + this.itemsPerPage;\n        const response = await this.getAll(); // Obtém todos os dados\n        this.people = response.pessoa.slice(startIndex, endIndex); // Filtra os dados da página atual\n      } catch (error) {\n        console.error('Erro ao buscar pessoas:', error);\n      }\n    },\n    async onPageChange(newPage) {\n      this.currentPage = newPage;\n      await this.fetchPeople(); // Chama o método para buscar os dados da nova página\n    },\n    async remover(id) {\n      try {\n        await PessoasService.remover(id);\n        console.log('Pessoa removida com sucesso!');\n        window.location.reload();\n      } catch (error) {\n        console.error('Erro ao remover pessoa:', error);\n      }\n    },\n  },\n  mounted() {\n    this.getAll();\n  },\n  created() {\n    // Aqui você deve buscar os dados da tabela ao inicializar o componente\n    // Exemplo fictício de dados\n    this.people = [\n      { id: 1, name: 'Alice', age: 25, gender: 'female', group: 'Grupo A' },\n      { id: 2, name: 'Bob', age: 30, gender: 'male', group: 'Grupo B' },\n      { id: 3, name: 'Charlie', age: 40, gender: 'male', group: 'Grupo A' },\n      // Mais dados...\n    ];\n  },\n};\n</script>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}