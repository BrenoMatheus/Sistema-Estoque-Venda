{"ast":null,"code":"import grupoPessoaService from '@/services/api/grupoProduto/grupoProdutoService';\nexport default {\n  props: ['modelValue', 'initialGroup'],\n  emits: ['update:modelValue'],\n  data() {\n    return {\n      selectedGroup: this.modelValue,\n      groups: [],\n      loading: false\n    };\n  },\n  watch: {\n    modelValue(newValue) {\n      this.selectedGroup = newValue;\n    },\n    selectedGroup(newValue) {\n      this.$emit('update:modelValue', newValue);\n    }\n  },\n  methods: {\n    async getAll() {\n      try {\n        this.loading = true;\n        const response = await grupoPessoaService.getAll();\n        this.groups = response;\n      } catch (error) {\n        console.error('Erro ao obter grupos:', error);\n      } finally {\n        this.loading = false;\n      }\n    },\n    emitGroup() {\n      this.$emit('update:modelValue', this.selectedGroup);\n      this.$emit('group-selected', this.selectedGroup);\n    }\n  },\n  mounted() {\n    if (!this.initialGroup) {\n      this.getAll();\n    }\n  }\n};","map":{"version":3,"names":["grupoPessoaService","props","emits","data","selectedGroup","modelValue","groups","loading","watch","newValue","$emit","methods","getAll","response","error","console","emitGroup","mounted","initialGroup"],"sources":["/home/brenomatheus/Documentos/Teste Pratico DEV Junior/frontend/src/pages/Home/components/Produto/components/SelectGrupoComponent.vue"],"sourcesContent":["\n  <template>\n    <select\n      v-model=\"selectedGroup\"\n      @change=\"emitGroup\"\n      class=\"py-2 px-3 rounded mr-4 shadow-lg shadow-gray-700 border-2 border-gray-300\"\n    >\n      <option value=\"\" selected>Todos os grupos</option>\n      <option v-for=\"group in groups\" :key=\"group.id\" :value=\"group.id\">\n        {{ group.nome }}\n      </option>\n    </select>\n  </template>\n  \n  <script>\n  import grupoPessoaService from '@/services/api/grupoProduto/grupoProdutoService';\n  export default {\n    props: ['modelValue', 'initialGroup'],\n    emits: ['update:modelValue'],\n  \n    data() {\n      return {\n        selectedGroup: this.modelValue,\n        groups: [],\n        loading: false,\n      };\n    },\n  \n    watch: {\n      modelValue(newValue) {\n        this.selectedGroup = newValue;\n      },\n      selectedGroup(newValue) {\n        this.$emit('update:modelValue', newValue);\n      },\n    },\n    methods: {\n      async getAll() {\n        try {\n          this.loading = true;\n          const response = await grupoPessoaService.getAll();\n          this.groups = response;\n        } catch (error) {\n          console.error('Erro ao obter grupos:', error);\n        } finally {\n          this.loading = false;\n        }\n      },\n      emitGroup() {\n        this.$emit('update:modelValue', this.selectedGroup);\n        this.$emit('group-selected', this.selectedGroup);\n      }\n    \n    },\n    mounted() {\n      if (!this.initialGroup) {\n        this.getAll();\n      }\n    },\n  };\n  </script>"],"mappings":"AAeE,OAAOA,kBAAiB,MAAO,iDAAiD;AAChF,eAAe;EACbC,KAAK,EAAE,CAAC,YAAY,EAAE,cAAc,CAAC;EACrCC,KAAK,EAAE,CAAC,mBAAmB,CAAC;EAE5BC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,aAAa,EAAE,IAAI,CAACC,UAAU;MAC9BC,MAAM,EAAE,EAAE;MACVC,OAAO,EAAE;IACX,CAAC;EACH,CAAC;EAEDC,KAAK,EAAE;IACLH,UAAUA,CAACI,QAAQ,EAAE;MACnB,IAAI,CAACL,aAAY,GAAIK,QAAQ;IAC/B,CAAC;IACDL,aAAaA,CAACK,QAAQ,EAAE;MACtB,IAAI,CAACC,KAAK,CAAC,mBAAmB,EAAED,QAAQ,CAAC;IAC3C;EACF,CAAC;EACDE,OAAO,EAAE;IACP,MAAMC,MAAMA,CAAA,EAAG;MACb,IAAI;QACF,IAAI,CAACL,OAAM,GAAI,IAAI;QACnB,MAAMM,QAAO,GAAI,MAAMb,kBAAkB,CAACY,MAAM,CAAC,CAAC;QAClD,IAAI,CAACN,MAAK,GAAIO,QAAQ;MACxB,EAAE,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC/C,UAAU;QACR,IAAI,CAACP,OAAM,GAAI,KAAK;MACtB;IACF,CAAC;IACDS,SAASA,CAAA,EAAG;MACV,IAAI,CAACN,KAAK,CAAC,mBAAmB,EAAE,IAAI,CAACN,aAAa,CAAC;MACnD,IAAI,CAACM,KAAK,CAAC,gBAAgB,EAAE,IAAI,CAACN,aAAa,CAAC;IAClD;EAEF,CAAC;EACDa,OAAOA,CAAA,EAAG;IACR,IAAI,CAAC,IAAI,CAACC,YAAY,EAAE;MACtB,IAAI,CAACN,MAAM,CAAC,CAAC;IACf;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}